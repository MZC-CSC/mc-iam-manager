basePath: /api/v1
definitions:
  handler.Response:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
  handler.SetupInitialAdminRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  idp.UserLogin:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  mcmpapi.McmpApiAction:
    properties:
      actionName:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        description: Auto-incrementing primary key
        type: integer
      method:
        type: string
      resourcePath:
        type: string
      serviceName:
        description: Foreign key reference (indexed)
        type: string
      updatedAt:
        type: string
    type: object
  mcmpapi.McmpApiAuthInfo:
    properties:
      password:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  mcmpapi.McmpApiCallRequest:
    properties:
      actionName:
        description: Target action name (operationId)
        type: string
      requestParams:
        allOf:
        - $ref: '#/definitions/mcmpapi.McmpApiRequestParams'
        description: Parameters for the external API call
      serviceName:
        description: Target service name
        type: string
    required:
    - actionName
    - serviceName
    type: object
  mcmpapi.McmpApiDefinitions:
    properties:
      serviceActions:
        additionalProperties:
          additionalProperties:
            $ref: '#/definitions/mcmpapi.McmpApiServiceAction'
          type: object
        description: Use renamed ServiceAction
        type: object
      services:
        additionalProperties:
          $ref: '#/definitions/mcmpapi.McmpApiServiceDefinition'
        description: Use renamed ServiceDefinition
        type: object
    type: object
  mcmpapi.McmpApiPermissionActionMapping:
    properties:
      actionID:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      permissionID:
        type: string
      updatedAt:
        type: string
    type: object
  mcmpapi.McmpApiRequestParams:
    properties:
      body:
        description: Request body (accept any JSON structure) - Changed from json.RawMessage
          for swag compatibility
      pathParams:
        additionalProperties:
          type: string
        description: Parameters to replace in the resource path (e.g., {userId})
        type: object
      queryParams:
        additionalProperties:
          type: string
        description: Parameters to append as query string (?key=value)
        type: object
    type: object
  mcmpapi.McmpApiServiceAction:
    properties:
      description:
        type: string
      method:
        type: string
      resourcePath:
        type: string
    type: object
  mcmpapi.McmpApiServiceDefinition:
    properties:
      auth:
        allOf:
        - $ref: '#/definitions/mcmpapi.McmpApiAuthInfo'
        description: Use renamed AuthInfo
      baseURL:
        type: string
      version:
        type: string
    type: object
  model.CspCredentialRequest:
    properties:
      cspType:
        description: 대상 CSP 타입
        enum:
        - aws
        - gcp
        - azure
        type: string
      workspaceId:
        description: 대상 워크스페이스 ID
        type: string
    required:
    - cspType
    - workspaceId
    type: object
  model.CspCredentialResponse:
    properties:
      accessKeyId:
        description: AWS Access Key ID
        type: string
      cspType:
        description: e.g., "aws"
        type: string
      expiration:
        description: Expiration time
        type: string
      region:
        description: 'Optional: AWS Region'
        type: string
      secretAccessKey:
        description: AWS Secret Access Key
        type: string
      sessionToken:
        description: AWS Session Token
        type: string
    type: object
  model.CspRole:
    properties:
      created_at:
        type: string
      csp_type:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      role_arn:
        type: string
      updated_at:
        type: string
    type: object
  model.MciamPermission:
    properties:
      action:
        description: e.g., create, read, update, delete
        type: string
      createdAt:
        description: Match DB schema
        type: string
      description:
        type: string
      frameworkId:
        description: FK to mcmp_resource_types.framework_id
        type: string
      id:
        description: 'Format: <framework_id>:<resource_type_id>:<action>'
        type: string
      name:
        type: string
      resourceTypeId:
        description: FK to mcmp_resource_types.id
        type: string
      updatedAt:
        description: Match DB schema
        type: string
    type: object
  model.Menu:
    properties:
      display_name:
        type: string
      id:
        type: string
      is_action:
        type: boolean
      menu_number:
        type: integer
      parent_id:
        type: string
      priority:
        type: integer
      res_type:
        type: string
    type: object
  model.MenuTreeNode:
    properties:
      children:
        description: Slice of pointers to child nodes
        items:
          $ref: '#/definitions/model.MenuTreeNode'
        type: array
      display_name:
        type: string
      id:
        type: string
      is_action:
        type: boolean
      menu_number:
        type: integer
      parent_id:
        type: string
      priority:
        type: integer
      res_type:
        type: string
    type: object
  model.PlatformRole:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  model.Project:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      nsid:
        description: Namespace ID
        type: string
      updated_at:
        type: string
      workspaces:
        description: M:N relationship
        items:
          $ref: '#/definitions/model.Workspace'
        type: array
    type: object
  model.ResourceType:
    properties:
      createdAt:
        type: string
      description:
        type: string
      frameworkId:
        description: Identifier of the framework (e.g., "mc-iam-manager", "mc-infra-manager")
        type: string
      id:
        description: Unique identifier within the framework (e.g., "workspace", "vm")
        type: string
      name:
        description: Display name (e.g., "Workspace", "Virtual Machine")
        type: string
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      created_at:
        type: string
      description:
        type: string
      email:
        description: Ignore Email for DB
        type: string
      enabled:
        description: Enabled status managed by Keycloak
        type: boolean
      firstName:
        description: Ignore FirstName for DB
        type: string
      id:
        description: DB에 저장되는 정보 (mcmp_users 테이블)
        type: integer
      kc_id:
        description: Keycloak User ID
        type: string
      lastName:
        description: Ignore LastName for DB
        type: string
      platform_roles:
        description: 관계 정의 (Foreign Key는 DB ID인 'ID' 필드를 참조해야 함)
        items:
          $ref: '#/definitions/model.PlatformRole'
        type: array
      updated_at:
        type: string
      username:
        description: Keycloak 정보
        type: string
      workspace_roles:
        description: Changed foreignKey to ID
        items:
          $ref: '#/definitions/model.WorkspaceRole'
        type: array
    type: object
  model.UserWorkspaceRole:
    properties:
      created_at:
        type: string
      user_id:
        description: 복합 키의 일부
        type: integer
      workspace_id:
        description: 복합 키의 일부, FK
        type: integer
      workspace_role_id:
        description: 복합 키의 일부, FK
        type: integer
    type: object
  model.Workspace:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      projects:
        description: M:N relationship
        items:
          $ref: '#/definitions/model.Project'
        type: array
      updated_at:
        type: string
    type: object
  model.WorkspaceRole:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        description: 이름은 고유해야 함
        type: string
      updated_at:
        type: string
    type: object
  model.WorkspaceRoleCspRoleMapping:
    properties:
      createdAt:
        type: string
      cspRoleArn:
        description: The actual ARN or identifier of the role in the CSP
        type: string
      cspType:
        description: e.g., "aws", "gcp", "azure"
        type: string
      description:
        description: Description of this specific mapping (Nullable)
        type: string
      idpIdentifier:
        description: e.g., AWS OIDC Provider ARN (Nullable)
        type: string
      workspaceRoleId:
        description: FK to mcmp_workspace_roles.id
        type: integer
    type: object
  service.WorkspaceRoleInfo:
    properties:
      role:
        $ref: '#/definitions/model.WorkspaceRole'
      workspace:
        $ref: '#/definitions/model.Workspace'
    type: object
host: localhost:3000
info:
  contact: {}
  description: MC IAM Manager API Documentation
  title: MC IAM Manager API
  version: "1.0"
paths:
  /admin/credentials:
    post:
      consumes:
      - application/json
      description: 사용자의 워크스페이스 역할에 매핑된 CSP 역할을 Assume하여 임시 자격 증명을 발급받습니다.
      parameters:
      - description: 워크스페이스 ID 및 CSP 타입
        in: body
        name: credentialRequest
        required: true
        schema:
          $ref: '#/definitions/model.CspCredentialRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 발급된 임시 자격 증명 (현재 AWS만 지원)
          schema:
            $ref: '#/definitions/model.CspCredentialResponse'
        "400":
          description: 'error: 잘못된 요청 형식 또는 지원하지 않는 CSP 타입'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: 인증 실패 또는 유효하지 않은 토큰'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: 해당 워크스페이스에 역할이 없거나 매핑된 CSP 역할이 없음'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 사용자 또는 워크스페이스를 찾을 수 없음'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류 또는 CSP 통신 실패'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: CSP 임시 자격 증명 발급
      tags:
      - csp-credentials
  /admin/mcmp-apis:
    get:
      consumes:
      - application/json
      description: Retrieves all MCMP API service and action definitions currently
        stored in the database.
      parameters:
      - description: Filter by service name
        in: query
        name: serviceName
        type: string
      - description: Filter by action name (operationId)
        in: query
        name: actionName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved API definitions
          schema:
            $ref: '#/definitions/mcmpapi.McmpApiDefinitions'
        "500":
          description: 'message: Failed to retrieve API definitions'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get All Stored MCMP API Definitions
      tags:
      - McmpAPI
  /admin/sync-projects:
    post:
      consumes:
      - application/json
      description: mc-infra-manager의 네임스페이스 목록을 조회하여 로컬 DB에 없는 프로젝트를 추가합니다.
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Project synchronization successful'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류 또는 동기화 실패'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: mc-infra-manager와 프로젝트 동기화
      tags:
      - projects
  /api/admin/check-roles:
    get:
      consumes:
      - application/json
      description: Check all roles assigned to a user
      parameters:
      - description: Username to check roles
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Check user roles
      tags:
      - admin
  /api/admin/csp-roles:
    get:
      consumes:
      - application/json
      description: 관리자가 모든 CSP 역할을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.CspRole'
            type: array
      security:
      - BearerAuth: []
      summary: 모든 CSP 역할 조회 (관리자용)
      tags:
      - admin-csp-roles
    post:
      consumes:
      - application/json
      description: 관리자가 새로운 CSP 역할을 생성합니다.
      parameters:
      - description: CSP 역할 정보
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.CspRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.CspRole'
      security:
      - BearerAuth: []
      summary: CSP 역할 생성 (관리자용)
      tags:
      - admin-csp-roles
  /api/admin/csp-roles/{id}:
    delete:
      consumes:
      - application/json
      description: 관리자가 CSP 역할을 삭제합니다.
      parameters:
      - description: CSP 역할 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: CSP 역할 삭제 (관리자용)
      tags:
      - admin-csp-roles
    put:
      consumes:
      - application/json
      description: 관리자가 CSP 역할 정보를 수정합니다.
      parameters:
      - description: CSP 역할 ID
        in: path
        name: id
        required: true
        type: string
      - description: CSP 역할 정보
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.CspRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CspRole'
      security:
      - BearerAuth: []
      summary: CSP 역할 수정 (관리자용)
      tags:
      - admin-csp-roles
  /api/admin/setup:
    post:
      consumes:
      - application/json
      description: Creates the initial platform admin user with necessary permissions
      parameters:
      - description: Setup Initial Admin Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SetupInitialAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Setup initial platform admin
      tags:
      - admin
  /api/mcmp-api-permission-action-mappings:
    post:
      consumes:
      - application/json
      description: Creates a new mapping between a permission and an API action
      parameters:
      - description: Mapping to create
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/mcmpapi.McmpApiPermissionActionMapping'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Create permission-action mapping
      tags:
      - mcmp-api-permission-action-mappings
  /api/mcmp-api-permission-action-mappings/actions/{actionId}/permissions:
    get:
      consumes:
      - application/json
      description: Returns all permissions mapped to a specific API action
      parameters:
      - description: Action ID
        in: path
        name: actionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get permissions by action ID
      tags:
      - mcmp-api-permission-action-mappings
  /api/mcmp-api-permission-action-mappings/permissions/{permissionId}/actions/{actionId}:
    delete:
      consumes:
      - application/json
      description: Deletes a mapping between a permission and an API action
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      - description: Action ID
        in: path
        name: actionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete permission-action mapping
      tags:
      - mcmp-api-permission-action-mappings
    put:
      consumes:
      - application/json
      description: Updates an existing mapping between a permission and an API action
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      - description: Action ID
        in: path
        name: actionId
        required: true
        type: integer
      - description: Updated mapping
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/mcmpapi.McmpApiPermissionActionMapping'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update permission-action mapping
      tags:
      - mcmp-api-permission-action-mappings
  /api/mcmp-api-permission-action-mappings/platforms/{permissionId}/actions:
    get:
      consumes:
      - application/json
      description: Returns all platform actions mapped to a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mcmpapi.McmpApiAction'
            type: array
      summary: Get platform actions by permission ID
      tags:
      - mcmp-api-permission-action-mappings
  /api/mcmp-api-permission-action-mappings/workspaces/{permissionId}/actions:
    get:
      consumes:
      - application/json
      description: Returns all workspace actions mapped to a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mcmpapi.McmpApiAction'
            type: array
      summary: Get workspace actions by permission ID
      tags:
      - mcmp-api-permission-action-mappings
  /api/platform-roles:
    get:
      consumes:
      - application/json
      description: 모든 플랫폼 역할을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PlatformRole'
            type: array
      summary: 플랫폼 역할 목록 조회
      tags:
      - platform-roles
    post:
      consumes:
      - application/json
      description: 새로운 플랫폼 역할을 생성합니다.
      parameters:
      - description: Platform Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.PlatformRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 생성
      tags:
      - platform-roles
  /api/platform-roles/{id}:
    delete:
      consumes:
      - application/json
      description: 플랫폼 역할을 삭제합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 플랫폼 역할 삭제
      tags:
      - platform-roles
    get:
      consumes:
      - application/json
      description: ID로 플랫폼 역할을 조회합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 조회
      tags:
      - platform-roles
    put:
      consumes:
      - application/json
      description: 기존 플랫폼 역할을 수정합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Platform Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.PlatformRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 수정
      tags:
      - platform-roles
  /api/v1/admin/workspaces:
    get:
      consumes:
      - application/json
      description: 관리자가 모든 워크스페이스를 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Workspace'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 모든 워크스페이스 조회 (관리자용)
      tags:
      - workspaces
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: 사용자 인증 및 JWT 토큰 발급 (Keycloak 연동)
      parameters:
      - description: 사용자 로그인 정보 (ID, Password)
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/idp.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: JWT 토큰
          schema:
            type: string
        "400":
          description: 'error: 사용자 ID와 비밀번호를 입력해주세요'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Keycloak 인증 실패'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Keycloak 사용자 정보를 찾을 수 없습니다 (계정 동기화 문제 가능성)'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Keycloak 사용자 정보 조회 실패'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 사용자 로그인
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: 사용자 로그아웃 처리
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully logged out'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 로그아웃
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Refresh 토큰을 사용하여 새로운 Access 토큰을 발급합니다.
      parameters:
      - description: 갱신할 Refresh 토큰
        in: formData
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 새로운 Access 토큰
          schema:
            type: string
        "400":
          description: 'error: 리프레시 토큰이 필요합니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: 토큰 갱신 실패'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Access 토큰 갱신
      tags:
      - auth
  /api/v1/menus:
    get:
      consumes:
      - application/json
      description: 모든 메뉴 목록을 트리 구조로 조회합니다. 관리자 권한이 필요합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MenuTreeNode'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 모든 메뉴 트리 조회 (관리자용)
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: 새로운 메뉴를 생성합니다
      parameters:
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 새 메뉴 생성
      tags:
      - menus
  /api/v1/menus/{id}:
    delete:
      consumes:
      - application/json
      description: 메뉴를 삭제합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: 메뉴 삭제
      tags:
      - menus
    get:
      consumes:
      - application/json
      description: 특정 메뉴를 ID로 조회합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 ID로 조회
      tags:
      - menus
    put:
      consumes:
      - application/json
      description: 메뉴 정보를 업데이트합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 정보 업데이트
      tags:
      - menus
  /api/v1/menus/platform-roles/{role}:
    get:
      consumes:
      - application/json
      description: 특정 플랫폼 역할에 매핑된 메뉴 목록을 조회합니다.
      parameters:
      - description: Platform Role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Menu'
            type: array
        "400":
          description: 'error: platform role is required'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할에 매핑된 메뉴 목록 조회
      tags:
      - menus
  /api/v1/menus/platform-roles/{role}/menus/{menuId}:
    delete:
      consumes:
      - application/json
      description: 플랫폼 역할과 메뉴 간의 매핑을 삭제합니다.
      parameters:
      - description: Platform Role
        in: path
        name: role
        required: true
        type: string
      - description: Menu ID
        in: path
        name: menuId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Menu mapping deleted successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: platform role and menu ID are required'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할-메뉴 매핑 삭제
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: 플랫폼 역할과 메뉴 간의 매핑을 생성합니다.
      parameters:
      - description: Platform Role
        in: path
        name: role
        required: true
        type: string
      - description: Menu ID
        in: path
        name: menuId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: 'message: Menu mapping created successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: platform role and menu ID are required'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할-메뉴 매핑 생성
      tags:
      - menus
  /api/v1/menus/register-from-body:
    post:
      consumes:
      - text/plain
      description: 요청 본문에 포함된 YAML 텍스트를 파싱하여 메뉴를 데이터베이스에 등록하거나 업데이트합니다. Content-Type은
        text/plain, text/yaml, application/yaml 등을 권장합니다.
      parameters:
      - description: Menu definitions in YAML format (must contain 'menus:' root key)
        example: '"menus:\n  - id: new-item\n    parentid: dashboard\n    displayname:
          New Menu Item\n    restype: menu\n    isaction: false\n    priority: 10\n    menunumber:
          9999"'
        in: body
        name: yaml
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: 잘못된 요청 본문 또는 YAML 형식 오류'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 요청 본문의 YAML 내용으로 메뉴 등록/업데이트
      tags:
      - menus
  /api/v1/menus/register-from-yaml:
    post:
      consumes:
      - application/json
      description: filePath 쿼리 파라미터로 지정된 로컬 YAML 파일 또는 파라미터가 없을 경우 .env 파일의 MCWEBCONSOLE_MENUYAML
        URL에서 메뉴를 가져와 데이터베이스에 등록/업데이트합니다. URL에서 가져올 경우 asset/menu/menu.yaml에 저장됩니다.
      parameters:
      - description: YAML 파일 경로 (선택 사항, 없으면 .env의 URL 또는 기본 로컬 경로 사용)
        in: query
        name: filePath
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from YAML'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 실패 메시지'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: YAML 파일 또는 URL에서 메뉴 등록/업데이트
      tags:
      - menus
  /api/v1/projects:
    get:
      consumes:
      - application/json
      description: 모든 프로젝트 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 목록 조회
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: 새로운 프로젝트를 생성합니다
      parameters:
      - description: Project Info
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 새 프로젝트 생성
      tags:
      - projects
  /api/v1/projects/{id}:
    delete:
      consumes:
      - application/json
      description: 프로젝트를 삭제합니다
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Project not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 삭제
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: 특정 프로젝트를 ID로 조회합니다
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Project not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 ID로 조회
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: 프로젝트 정보를 업데이트합니다
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project Info
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Project not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 정보 업데이트
      tags:
      - projects
  /api/v1/projects/name/{name}:
    get:
      consumes:
      - application/json
      description: 특정 프로젝트를 이름으로 조회합니다
      parameters:
      - description: Project Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Project not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 이름으로 조회
      tags:
      - projects
  /api/v1/resource-types:
    get:
      consumes:
      - application/json
      description: 모든 리소스 타입 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ResourceType'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 목록 조회
      tags:
      - resource-types
    post:
      consumes:
      - application/json
      description: 새로운 리소스 타입을 생성합니다
      parameters:
      - description: Resource Type Info
        in: body
        name: resourceType
        required: true
        schema:
          $ref: '#/definitions/model.ResourceType'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResourceType'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 새 리소스 타입 생성
      tags:
      - resource-types
  /api/v1/resource-types/{id}:
    delete:
      consumes:
      - application/json
      description: 리소스 타입을 삭제합니다
      parameters:
      - description: Resource Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Resource Type not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 삭제
      tags:
      - resource-types
    get:
      consumes:
      - application/json
      description: 특정 리소스 타입을 ID로 조회합니다
      parameters:
      - description: Resource Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResourceType'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Resource Type not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 ID로 조회
      tags:
      - resource-types
    put:
      consumes:
      - application/json
      description: 리소스 타입 정보를 업데이트합니다
      parameters:
      - description: Resource Type ID
        in: path
        name: id
        required: true
        type: string
      - description: Resource Type Info
        in: body
        name: resourceType
        required: true
        schema:
          $ref: '#/definitions/model.ResourceType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResourceType'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Resource Type not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 업데이트
      tags:
      - resource-types
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: 모든 사용자 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 목록 조회
      tags:
      - users
    post:
      consumes:
      - application/json
      description: 새로운 사용자를 생성합니다
      parameters:
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 새 사용자 생성
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: 사용자를 삭제합니다
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 삭제
      tags:
      - users
    get:
      consumes:
      - application/json
      description: 특정 사용자를 ID로 조회합니다
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 ID로 조회
      tags:
      - users
    put:
      consumes:
      - application/json
      description: 사용자 정보를 업데이트합니다
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 정보 업데이트
      tags:
      - users
  /api/v1/users/{id}/approve:
    post:
      consumes:
      - application/json
      description: 사용자를 승인합니다
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 승인
      tags:
      - users
  /api/v1/users/menus:
    get:
      consumes:
      - application/json
      description: 현재 로그인한 사용자의 Platform Role에 따라 접근 가능한 메뉴 목록을 트리 구조로 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MenuTreeNode'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 현재 사용자의 메뉴 트리 조회
      tags:
      - menus
  /api/v1/users/username/{username}:
    get:
      consumes:
      - application/json
      description: 특정 사용자를 사용자 이름으로 조회합니다
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: User not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 이름으로 조회
      tags:
      - users
  /api/v1/users/workspaces:
    get:
      description: 현재 사용자의 워크스페이스 목록과 각 워크스페이스에서의 역할을 조회합니다. (인증 필수)
      produces:
      - application/json
      responses:
        "200":
          description: 워크스페이스 목록 및 역할 정보
          schema:
            items:
              $ref: '#/definitions/service.WorkspaceRoleInfo'
            type: array
        "401":
          description: 'error: token_claims not found in context'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 워크스페이스 및 역할 정보를 가져오는데 실패했습니다'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 워크스페이스 및 역할 조회
      tags:
      - users
  /api/v1/workspace/set:
    post:
      consumes:
      - application/json
      description: 워크스페이스 티켓 설정
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Workspace ticket set successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 티켓 설정
      tags:
      - auth
  /api/v1/workspaces:
    get:
      consumes:
      - application/json
      description: 모든 워크스페이스 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Workspace'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 목록 조회
      tags:
      - workspaces
    post:
      consumes:
      - application/json
      description: 새로운 워크스페이스를 생성합니다
      parameters:
      - description: Workspace Info
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/model.Workspace'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 새 워크스페이스 생성
      tags:
      - workspaces
  /api/v1/workspaces/{id}:
    delete:
      consumes:
      - application/json
      description: 워크스페이스를 삭제합니다
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 삭제
      tags:
      - workspaces
    put:
      consumes:
      - application/json
      description: 워크스페이스 정보를 업데이트합니다
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: Workspace Info
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/model.Workspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 정보 업데이트
      tags:
      - workspaces
  /api/v1/workspaces/{id}/projects/{projectId}:
    delete:
      consumes:
      - application/json
      description: 워크스페이스에서 프로젝트를 제거합니다
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace or Project not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스에서 프로젝트 제거
      tags:
      - workspaces
    post:
      consumes:
      - application/json
      description: 워크스페이스에 프로젝트를 추가합니다
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace or Project not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스에 프로젝트 추가
      tags:
      - workspaces
  /api/v1/workspaces/{workspaceId}:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스를 ID로 조회합니다
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 ID로 조회
      tags:
      - workspaces
  /api/v1/workspaces/{workspaceId}/projects:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스에 속한 프로젝트 목록을 조회합니다
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스의 프로젝트 목록 조회
      tags:
      - workspaces
  /api/v1/workspaces/{workspaceId}/users:
    get:
      consumes:
      - application/json
      description: 워크스페이스에 속한 사용자와 역할 목록을 조회합니다
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserWorkspaceRole'
            type: array
        "400":
          description: 'error: Invalid workspace ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 워크스페이스에 속한 사용자와 역할 목록 조회
      tags:
      - workspaces
  /api/v1/workspaces/name/{workspaceName}:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스를 이름으로 조회합니다
      parameters:
      - description: Workspace Name
        in: path
        name: workspaceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 이름으로 조회
      tags:
      - workspaces
  /api/workspace-roles:
    get:
      consumes:
      - application/json
      description: 모든 워크스페이스 역할 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.WorkspaceRole'
            type: array
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 역할 목록 조회
      tags:
      - workspace-roles
    post:
      consumes:
      - application/json
      description: 새로운 워크스페이스 역할을 생성합니다.
      parameters:
      - description: 역할 정보
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.WorkspaceRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.WorkspaceRole'
        "400":
          description: 'error: 잘못된 요청 데이터'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 역할 생성
      tags:
      - workspace-roles
  /api/workspace-roles/{id}:
    delete:
      consumes:
      - application/json
      description: 워크스페이스 역할을 삭제합니다.
      parameters:
      - description: 역할 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 역할을 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 역할 삭제
      tags:
      - workspace-roles
    get:
      consumes:
      - application/json
      description: ID로 워크스페이스 역할을 조회합니다.
      parameters:
      - description: 역할 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WorkspaceRole'
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 역할을 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 역할 조회
      tags:
      - workspace-roles
    put:
      consumes:
      - application/json
      description: 기존 워크스페이스 역할을 수정합니다.
      parameters:
      - description: 역할 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 역할 정보
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.WorkspaceRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WorkspaceRole'
        "400":
          description: 'error: 잘못된 요청 데이터'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 역할을 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 역할 수정
      tags:
      - workspace-roles
  /api/workspaces/{workspaceId}/users/{username}/roles:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스에서 사용자에게 할당된 역할 목록을 조회합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      - description: 사용자 이름
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 역할 이름 목록
          schema:
            items:
              type: string
            type: array
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 사용자를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자의 워크스페이스 역할 목록 조회
      tags:
      - workspaces
      - roles
      - users
  /api/workspaces/{workspaceId}/users/{username}/roles/{roleName}:
    delete:
      consumes:
      - application/json
      description: 특정 워크스페이스 내의 사용자에게서 특정 워크스페이스 역할을 제거합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      - description: 사용자 이름
        in: path
        name: username
        required: true
        type: string
      - description: 역할 이름
        in: path
        name: roleName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 역할 또는 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 'error: 역할이 해당 워크스페이스에 속하지 않음'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 사용자 역할 제거
      tags:
      - workspaces
      - roles
      - users
    post:
      consumes:
      - application/json
      description: 특정 워크스페이스 내의 사용자에게 특정 워크스페이스 역할을 할당합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      - description: 사용자 이름
        in: path
        name: username
        required: true
        type: string
      - description: 역할 이름
        in: path
        name: roleName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 사용자, 역할 또는 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 'error: 역할이 해당 워크스페이스에 속하지 않음'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 사용자에게 역할 할당
      tags:
      - workspaces
      - roles
      - users
  /mciam-permissions:
    get:
      consumes:
      - application/json
      description: 모든 MC-IAM 권한 목록을 조회합니다.
      parameters:
      - description: 프레임워크 ID로 필터링
        in: query
        name: frameworkId
        type: string
      - description: 리소스 유형 ID로 필터링
        in: query
        name: resourceTypeId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MciamPermission'
            type: array
      summary: MC-IAM 권한 목록 조회
      tags:
      - mciam-permissions
    post:
      consumes:
      - application/json
      description: 새로운 MC-IAM 권한을 생성합니다.
      parameters:
      - description: 권한 정보
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.MciamPermission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.MciamPermission'
      summary: MC-IAM 권한 생성 - Renamed
      tags:
      - mciam-permissions
  /mciam-permissions/{id}:
    delete:
      consumes:
      - application/json
      description: MC-IAM 권한을 삭제합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: MC-IAM 권한 삭제 - Renamed
      tags:
      - mciam-permissions
    get:
      consumes:
      - application/json
      description: ID로 특정 MC-IAM 권한을 조회합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MciamPermission'
      summary: ID로 MC-IAM 권한 조회 - Renamed
      tags:
      - mciam-permissions
    put:
      consumes:
      - application/json
      description: 기존 MC-IAM 권한을 수정합니다 (Name, Description만 가능).
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      - description: '수정할 필드와 값 (예: {\'
        in: body
        name: updates
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 업데이트된 권한 정보" // Use renamed model
          schema:
            $ref: '#/definitions/model.MciamPermission'
      summary: MC-IAM 권한 수정 - Renamed
      tags:
      - mciam-permissions
  /mcmp-apis/{serviceName}:
    put:
      consumes:
      - application/json
      description: Updates specific fields (e.g., BaseURL, Auth info) of an MCMP API
        service definition identified by its name. Cannot update name or version.
      parameters:
      - description: Service Name to update
        in: path
        name: serviceName
        required: true
        type: string
      - description: Fields to update (e.g., {\
        in: body
        name: updates
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Service updated successfully" // Or return updated
            service?'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Invalid service name or request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Failed to update service'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update MCMP API Service Definition
      tags:
      - McmpAPI
  /mcmp-apis/{serviceName}/versions/{version}/activate:
    put:
      consumes:
      - application/json
      description: Sets the specified version of an MCMP API service as the active
        one.
      parameters:
      - description: Service Name
        in: path
        name: serviceName
        required: true
        type: string
      - description: Version to activate
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: Invalid service name or version'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or version not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Failed to set active version'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Set Active Version for a Service
      tags:
      - McmpAPI
  /mcmp-apis/call:
    post:
      consumes:
      - application/json
      description: Executes a defined MCMP API action with parameters structured in
        McmpApiCallRequest.
      parameters:
      - description: API Call Request
        in: body
        name: callRequest
        required: true
        schema:
          $ref: '#/definitions/mcmpapi.McmpApiCallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: External API Response (structure depends on the called API)
          schema:
            type: object
        "400":
          description: 'error: Invalid request body or parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or action not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error or failed to call external API'
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: 'error: External API unavailable'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Call an external MCMP API action (Structured Request)
      tags:
      - McmpAPI
  /mcmp-apis/test/mc-infra-manager/getallns:
    get:
      description: Calls the GetAllNs action of the mc-infra-manager service via the
        CallApi service.
      produces:
      - application/json
      responses:
        "200":
          description: Response from mc-infra-manager GetAllNs
          schema:
            type: object
        "400":
          description: 'error: Bad Request (e.g., invalid parameters)'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or Action Not Found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: 'error: External API Service Unavailable'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Test Call to mc-infra-manager GetAllNs
      tags:
      - McmpAPI
      - Test
  /projects/{id}/workspaces/{workspaceId}:
    delete:
      consumes:
      - application/json
      description: 프로젝트에서 워크스페이스 연결을 해제합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 프로젝트 또는 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트에서 워크스페이스 연결 해제
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: 프로젝트에 워크스페이스를 연결합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 프로젝트 또는 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트에 워크스페이스 연결
      tags:
      - projects
  /readyz:
    get:
      consumes:
      - application/json
      description: 서버의 상태를 확인합니다
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Service is healthy'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 헬스 체크
      tags:
      - health
  /roles/{roleType}/{roleId}/mciam-permissions:
    get:
      consumes:
      - application/json
      description: 특정 역할의 MC-IAM 권한 ID 목록을 조회합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 권한 ID 목록
          schema:
            items:
              type: string
            type: array
      summary: 역할의 MC-IAM 권한 목록 조회 - Renamed
      tags:
      - roles
      - mciam-permissions
  /roles/{roleType}/{roleId}/mciam-permissions/{permissionId}:
    delete:
      consumes:
      - application/json
      description: 역할에서 MC-IAM 권한을 제거합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: MC-IAM 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에서 MC-IAM 권한 제거 - Renamed
      tags:
      - roles
      - mciam-permissions
    post:
      consumes:
      - application/json
      description: 역할에 MC-IAM 권한을 할당합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: MC-IAM 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에 MC-IAM 권한 할당 - Renamed
      tags:
      - roles
      - mciam-permissions
  /sync-apis/sync:
    post:
      consumes:
      - application/json
      description: Triggers the synchronization of MCMP API definitions from the configured
        YAML URL to the database.
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully triggered MCMP API sync'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Failed to trigger MCMP API sync'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Sync MCMP API Definitions
      tags:
      - McmpAPI
  /workspace-roles/{roleId}/csp-role-mappings:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스 역할에 매핑된 모든 CSP 역할 목록을 조회합니다.
      parameters:
      - description: 워크스페이스 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.WorkspaceRoleCspRoleMapping'
            type: array
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 특정 워크스페이스 역할의 CSP 역할 매핑 목록 조회
      tags:
      - workspace-roles
      - csp-mappings
    post:
      consumes:
      - application/json
      description: 워크스페이스 역할과 CSP 역할(ARN)을 매핑합니다.
      parameters:
      - description: 워크스페이스 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: CSP 역할 매핑 정보 (workspaceRoleId는 경로 파라미터 사용, 요청 본문에서는 제외 가능)
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/model.WorkspaceRoleCspRoleMapping'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.WorkspaceRoleCspRoleMapping'
        "400":
          description: 'error: 잘못된 요청 형식 또는 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 워크스페이스 역할을 찾을 수 없음'
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 'error: 이미 매핑이 존재함 (PK 충돌)'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 역할-CSP 역할 매핑 생성
      tags:
      - workspace-roles
      - csp-mappings
  /workspace-roles/{roleId}/csp-role-mappings/{cspType}/{cspRoleArn}:
    delete:
      consumes:
      - application/json
      description: 역할-CSP 역할 매핑을 삭제합니다.
      parameters:
      - description: 워크스페이스 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: CSP 타입 (e.g., aws)
        in: path
        name: cspType
        required: true
        type: string
      - description: CSP 역할 ARN (URL Encoded)
        in: path
        name: cspRoleArn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 매핑을 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 역할-CSP 역할 매핑 삭제
      tags:
      - workspace-roles
      - csp-mappings
    put:
      consumes:
      - application/json
      description: 기존 역할-CSP 역할 매핑 정보를 수정합니다 (Description, IdpIdentifier만 수정 가능).
      parameters:
      - description: 워크스페이스 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: CSP 타입 (e.g., aws)
        in: path
        name: cspType
        required: true
        type: string
      - description: CSP 역할 ARN (URL Encoded)
        in: path
        name: cspRoleArn
        required: true
        type: string
      - description: '수정할 필드와 값 (예: {\'
        in: body
        name: updates
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 업데이트된 매핑 정보
          schema:
            $ref: '#/definitions/model.WorkspaceRoleCspRoleMapping'
        "400":
          description: 'error: 잘못된 요청 형식 또는 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 매핑을 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 역할-CSP 역할 매핑 수정
      tags:
      - workspace-roles
      - csp-mappings
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
