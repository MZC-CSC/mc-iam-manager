basePath: /api/v1
definitions:
  model.Menu:
    properties:
      display_name:
        type: string
      id:
        type: string
      is_action:
        type: boolean
      menu_number:
        type: integer
      parent_id:
        type: string
      priority:
        type: integer
      res_type:
        type: string
    type: object
  model.Permission:
    properties:
      created_at:
        type: string
      description:
        description: Increased size to match roles
        type: string
      id:
        description: Changed to string
        type: string
      name:
        description: Assuming Name column exists or needs to be added
        type: string
      updated_at:
        type: string
    type: object
  model.PlatformRole:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: MC IAM Manager API Documentation
  title: MC IAM Manager API
  version: "1.0"
paths:
  /api/permissions:
    get:
      consumes:
      - application/json
      description: 모든 권한 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
      summary: 권한 목록 조회
      tags:
      - permissions
    post:
      consumes:
      - application/json
      description: 새로운 권한을 생성합니다.
      parameters:
      - description: 권한 정보
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.Permission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Permission'
      summary: 권한 생성
      tags:
      - permissions
  /api/permissions/{id}:
    delete:
      consumes:
      - application/json
      description: 권한을 삭제합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 권한 삭제
      tags:
      - permissions
    get:
      consumes:
      - application/json
      description: ID로 특정 권한을 조회합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Permission'
      summary: ID로 권한 조회
      tags:
      - permissions
    put:
      consumes:
      - application/json
      description: 기존 권한을 수정합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      - description: 권한 정보
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.Permission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Permission'
      summary: 권한 수정
      tags:
      - permissions
  /api/platform-roles:
    get:
      consumes:
      - application/json
      description: 모든 플랫폼 역할을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PlatformRole'
            type: array
      summary: 플랫폼 역할 목록 조회
      tags:
      - platform-roles
    post:
      consumes:
      - application/json
      description: 새로운 플랫폼 역할을 생성합니다.
      parameters:
      - description: Platform Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.PlatformRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 생성
      tags:
      - platform-roles
  /api/platform-roles/{id}:
    delete:
      consumes:
      - application/json
      description: 플랫폼 역할을 삭제합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 플랫폼 역할 삭제
      tags:
      - platform-roles
    get:
      consumes:
      - application/json
      description: ID로 플랫폼 역할을 조회합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 조회
      tags:
      - platform-roles
    put:
      consumes:
      - application/json
      description: 기존 플랫폼 역할을 수정합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Platform Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.PlatformRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 수정
      tags:
      - platform-roles
  /api/roles/{roleType}/{roleId}/permissions:
    get:
      consumes:
      - application/json
      description: 특정 역할의 권한 목록을 조회합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
      summary: 역할의 권한 목록 조회
      tags:
      - permissions
  /api/roles/{roleType}/{roleId}/permissions/{permissionId}:
    delete:
      consumes:
      - application/json
      description: 역할에서 권한을 제거합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에서 권한 제거
      tags:
      - permissions
    post:
      consumes:
      - application/json
      description: 역할에 권한을 할당합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에 권한 할당
      tags:
      - permissions
  /auth/login:
    get:
      consumes:
      - application/json
      description: OIDC 로그인을 시작합니다
      produces:
      - application/json
      responses:
        "302":
          description: 리다이렉트 URL
          schema:
            type: string
      summary: 로그인
      tags:
      - auth
  /menus:
    get:
      consumes:
      - application/json
      description: 모든 메뉴 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Menu'
            type: array
      security:
      - BearerAuth: []
      summary: 모든 메뉴 조회
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: 새로운 메뉴를 생성합니다
      parameters:
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 새 메뉴 생성
      tags:
      - menus
  /menus/{id}:
    delete:
      consumes:
      - application/json
      description: 메뉴를 삭제합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: 메뉴 삭제
      tags:
      - menus
    get:
      consumes:
      - application/json
      description: 특정 메뉴를 ID로 조회합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 ID로 조회
      tags:
      - menus
    put:
      consumes:
      - application/json
      description: 메뉴 정보를 업데이트합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 정보 업데이트
      tags:
      - menus
  /menus/register-from-body:
    post:
      consumes:
      - text/plain
      description: 요청 본문에 포함된 YAML 텍스트를 파싱하여 메뉴를 데이터베이스에 등록하거나 업데이트합니다. Content-Type은
        text/plain, text/yaml, application/yaml 등을 권장합니다.
      parameters:
      - description: Menu definitions in YAML format (must contain 'menus:' root key)
        example: '"menus:\n  - id: new-item\n    parentid: dashboard\n    displayname:
          New Menu Item\n    restype: menu\n    isaction: false\n    priority: 10\n    menunumber:
          9999"'
        in: body
        name: yaml
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: 잘못된 요청 본문 또는 YAML 형식 오류'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 요청 본문의 YAML 내용으로 메뉴 등록/업데이트
      tags:
      - menus
  /menus/register-from-yaml:
    post:
      consumes:
      - application/json
      description: filePath 쿼리 파라미터로 지정된 로컬 YAML 파일 또는 파라미터가 없을 경우 .env 파일의 MCWEBCONSOLE_MENUYAML
        URL에서 메뉴를 가져와 데이터베이스에 등록/업데이트합니다. URL에서 가져올 경우 asset/menu/menu.yaml에 저장됩니다.
      parameters:
      - description: YAML 파일 경로 (선택 사항, 없으면 .env의 URL 또는 기본 로컬 경로 사용)
        in: query
        name: filePath
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from YAML'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 실패 메시지'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: YAML 파일 또는 URL에서 메뉴 등록/업데이트
      tags:
      - menus
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
