basePath: /api/v1
definitions:
  idp.UserLogin:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  mcmpapi.McmpApiAction:
    properties:
      actionName:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        description: Auto-incrementing primary key
        type: integer
      method:
        type: string
      resourcePath:
        type: string
      serviceName:
        description: Foreign key reference (indexed)
        type: string
      updatedAt:
        type: string
    type: object
  mcmpapi.McmpApiAuthInfo:
    properties:
      password:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  mcmpapi.McmpApiDefinitions:
    properties:
      serviceActions:
        additionalProperties:
          additionalProperties:
            $ref: '#/definitions/mcmpapi.McmpApiServiceAction'
          type: object
        description: Use renamed ServiceAction
        type: object
      services:
        additionalProperties:
          $ref: '#/definitions/mcmpapi.McmpApiServiceDefinition'
        description: Use renamed ServiceDefinition
        type: object
    type: object
  mcmpapi.McmpApiPermissionActionMapping:
    properties:
      actionID:
        type: integer
      actionName:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      permissionID:
        type: string
      updatedAt:
        type: string
    type: object
  mcmpapi.McmpApiServiceAction:
    properties:
      description:
        type: string
      method:
        type: string
      resourcePath:
        type: string
    type: object
  mcmpapi.McmpApiServiceDefinition:
    properties:
      auth:
        allOf:
        - $ref: '#/definitions/mcmpapi.McmpApiAuthInfo'
        description: Use renamed AuthInfo
      baseURL:
        type: string
      version:
        type: string
    type: object
  model.AssignRoleRequest:
    properties:
      roleId:
        description: 역할 ID (문자열로 받음)
        type: string
      roleName:
        description: 역할명
        type: string
      roleType:
        description: 역할 타입 (platform/workspace)
        type: string
      userId:
        description: 사용자 ID (문자열로 받음)
        type: string
      username:
        description: 사용자명
        type: string
      workspaceId:
        description: 워크스페이스 ID (문자열로 받음)
        type: string
    type: object
  model.AssignWorkspaceRoleRequest:
    properties:
      roleId:
        description: 역할 ID (문자열로 받음)
        type: string
      roleName:
        description: 역할명
        type: string
      userId:
        description: 사용자 ID (문자열로 받음)
        type: string
      username:
        description: 사용자명
        type: string
      workspaceId:
        description: 워크스페이스 ID (문자열로 받음)
        type: string
    type: object
  model.CreateMenuMappingRequest:
    properties:
      menuId:
        items:
          type: string
        type: array
      roleId:
        type: string
    required:
    - menuId
    - roleId
    type: object
  model.MciamPermission:
    properties:
      action:
        description: e.g., create, read, update, delete
        type: string
      createdAt:
        description: Match DB schema
        type: string
      description:
        type: string
      frameworkId:
        description: FK to mcmp_resource_types.framework_id
        type: string
      id:
        description: 'Format: <framework_id>:<resource_type_id>:<action>'
        type: string
      name:
        type: string
      resourceTypeId:
        description: FK to mcmp_resource_types.id
        type: string
      updatedAt:
        description: Match DB schema
        type: string
    type: object
  model.McmpApiCallRequest:
    properties:
      actionName:
        description: Target action name (operationId)
        type: string
      requestParams:
        allOf:
        - $ref: '#/definitions/model.McmpApiRequestParams'
        description: Parameters for the external API call
      serviceName:
        description: Target service name
        type: string
    required:
    - actionName
    - serviceName
    type: object
  model.McmpApiRequestParams:
    properties:
      body:
        description: Request body (accept any JSON structure) - Changed from json.RawMessage
          for swag compatibility
      pathParams:
        additionalProperties:
          type: string
        description: Parameters to replace in the resource path (e.g., {userId})
        type: object
      queryParams:
        additionalProperties:
          type: string
        description: Parameters to append as query string (?key=value)
        type: object
    type: object
  model.Menu:
    properties:
      display_name:
        type: string
      id:
        type: string
      is_action:
        type: boolean
      menu_number:
        type: integer
      parent_id:
        type: string
      priority:
        type: integer
      res_type:
        type: string
    type: object
  model.MenuMapping:
    properties:
      createdAt:
        type: string
      menuId:
        type: integer
      roleId:
        type: integer
    type: object
  model.MenuTreeNode:
    properties:
      children:
        description: Slice of pointers to child nodes
        items:
          $ref: '#/definitions/model.MenuTreeNode'
        type: array
      display_name:
        type: string
      id:
        type: string
      is_action:
        type: boolean
      menu_number:
        type: integer
      parent_id:
        type: string
      priority:
        type: integer
      res_type:
        type: string
    type: object
  model.Project:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      nsid:
        description: Namespace ID
        type: string
      updated_at:
        type: string
      workspaces:
        description: M:N relationship
        items:
          $ref: '#/definitions/model.Workspace'
        type: array
    type: object
  model.ResourceType:
    properties:
      createdAt:
        type: string
      description:
        type: string
      frameworkId:
        description: Identifier of the framework (e.g., "mc-iam-manager", "mc-infra-manager")
        type: string
      id:
        description: Unique identifier within the framework (e.g., "workspace", "vm")
        type: string
      name:
        description: Display name (e.g., "Workspace", "Virtual Machine")
        type: string
      updatedAt:
        type: string
    type: object
  model.Response:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
  model.RoleMaster:
    properties:
      children:
        items:
          $ref: '#/definitions/model.RoleMaster'
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      parent:
        $ref: '#/definitions/model.RoleMaster'
      parent_id:
        type: integer
      predefined:
        type: boolean
      role_subs:
        items:
          $ref: '#/definitions/model.RoleSub'
        type: array
      updated_at:
        type: string
    type: object
  model.RoleMasterCspRoleMappingRequest:
    properties:
      cspRoleId:
        type: string
      cspType:
        type: string
      description:
        type: string
      roleId:
        type: string
    type: object
  model.RoleMasterSubRequest:
    properties:
      description:
        type: string
      name:
        type: string
      parentId:
        type: integer
      roleTypes:
        items:
          type: string
        type: array
    required:
    - name
    - roleTypes
    type: object
  model.RoleSub:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role_id:
        type: integer
      role_type:
        type: string
      updated_at:
        type: string
    type: object
  model.SetupInitialAdminRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.User:
    properties:
      created_at:
        type: string
      description:
        type: string
      email:
        description: Ignore Email for DB
        type: string
      enabled:
        description: Enabled status managed by Keycloak
        type: boolean
      firstName:
        description: Ignore FirstName for DB
        type: string
      id:
        description: DB에 저장되는 정보 (mcmp_users 테이블)
        type: integer
      kc_id:
        description: Keycloak User ID
        type: string
      lastName:
        description: Ignore LastName for DB
        type: string
      platform_roles:
        description: 관계 정의
        items:
          $ref: '#/definitions/model.RoleMaster'
        type: array
      updated_at:
        type: string
      username:
        description: Keycloak 정보
        type: string
      workspace_roles:
        items:
          $ref: '#/definitions/model.RoleMaster'
        type: array
    type: object
  model.UserStatusRequest:
    properties:
      id:
        description: DB에 저장되는 정보 (mcmp_users 테이블)
        type: string
      kc_id:
        description: Keycloak User ID
        type: string
      status:
        description: 사용자 상태
        type: string
    type: object
  model.UserWorkspaceRole:
    properties:
      created_at:
        type: string
      role:
        $ref: '#/definitions/model.RoleMaster'
      role_id:
        type: integer
      role_name:
        type: string
      user:
        $ref: '#/definitions/model.User'
      user_id:
        type: integer
      username:
        type: string
      workspace:
        $ref: '#/definitions/model.Workspace'
      workspace_id:
        type: integer
      workspace_name:
        type: string
    type: object
  model.Workspace:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/model.Project'
        type: array
      updated_at:
        type: string
    type: object
  model.WorkspaceWithUsersAndRoles:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/model.UserWorkspaceRole'
        type: array
    type: object
  model.CreateCspRolesRequest:
    properties:
      cspRoles:
        items:
          $ref: '#/definitions/model.CspRole'
        type: array
    type: object
  model.CspRole:
    properties:
      cspType:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: MC IAM Manager API Documentation
  title: MC IAM Manager API
  version: "1.0"
paths:
  /admin/platform-roles:
    post:
      consumes:
      - application/json
      description: 새로운 플랫폼 역할을 생성합니다
      parameters:
      - description: Platform Role Info
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleMaster'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 새 플랫폼 역할 생성
      tags:
      - admin
  /admin/platform-roles/{id}:
    delete:
      consumes:
      - application/json
      description: 플랫폼 역할을 삭제합니다
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Platform Role not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할 삭제
      tags:
      - admin
    get:
      consumes:
      - application/json
      description: 특정 플랫폼 역할을 ID로 조회합니다
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Platform Role not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할 ID로 조회
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: 플랫폼 역할 정보를 업데이트합니다
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Platform Role Info
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleMaster'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Platform Role not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할 업데이트
      tags:
      - admin
  /admin/platform-roles/list:
    post:
      consumes:
      - application/json
      description: 모든 플랫폼 역할 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleMaster'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할 목록 조회
      tags:
      - admin
  /api/auth/certs:
    get:
      consumes:
      - application/json
      description: Get authentication certificates for token validation
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get authentication certificates
      tags:
      - auth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and get token
      parameters:
      - description: Login Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/idp.UserLogin'
      produces:
      - application/json
      responses: {}
      summary: Login
      tags:
      - auth
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user and invalidate token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout
      tags:
      - auth
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: Get new access token using refresh token
      produces:
      - application/json
      responses: {}
      summary: Refresh token
      tags:
      - auth
  /api/health:
    get:
      consumes:
      - application/json
      description: Check if the service is healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
      tags:
      - health
  /api/menus/list:
    post:
      consumes:
      - application/json
      description: 모든 메뉴 목록을 트리 구조로 조회합니다. 관리자 권한이 필요합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MenuTreeNode'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 모든 메뉴 트리 조회 (관리자용)
      tags:
      - menus
  /api/menus/platform-roles:
    delete:
      consumes:
      - application/json
      description: 플랫폼 역할과 메뉴 간의 매핑을 삭제합니다.
      parameters:
      - description: Platform Role ID
        in: query
        name: roleId
        type: string
      - description: Menu ID
        in: query
        name: menuId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Menu mapping deleted successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: platform role and menu ID are required'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할-메뉴 매핑 삭제
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: Create a new menu mapping
      parameters:
      - description: Menu Mapping
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/model.CreateMenuMappingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.MenuMapping'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create menu mapping
      tags:
      - menu
  /api/menus/platform-roles/list:
    post:
      consumes:
      - application/json
      description: 특정 플랫폼 역할에 매핑된 메뉴 목록을 조회합니다.
      parameters:
      - description: Platform Role ID
        in: query
        name: roleId
        type: string
      - description: Menu ID
        in: query
        name: menuId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Menu'
            type: array
        "400":
          description: 'error: platform role is required'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 플랫폼 역할에 매핑된 메뉴 목록 조회
      tags:
      - menus
  /api/menus/setup/initial-menu:
    post:
      consumes:
      - application/json
      description: filePath 쿼리 파라미터로 지정된 로컬 YAML 파일 또는 파라미터가 없을 경우 .env 파일의 MCWEBCONSOLE_MENUYAML
        URL에서 메뉴를 가져와 데이터베이스에 등록/업데이트합니다. URL에서 가져올 경우 asset/menu/menu.yaml에 저장됩니다.
      parameters:
      - description: YAML 파일 경로 (선택 사항, 없으면 .env의 URL 또는 기본 로컬 경로 사용)
        in: query
        name: filePath
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from YAML'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 실패 메시지'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: YAML 파일 또는 URL에서 메뉴 등록/업데이트
      tags:
      - menus
  /api/menus/setup/initial-menu2:
    post:
      consumes:
      - text/plain
      description: 요청 본문에 포함된 YAML 텍스트를 파싱하여 메뉴를 데이터베이스에 등록하거나 업데이트합니다. Content-Type은
        text/plain, text/yaml, application/yaml 등을 권장합니다.
      parameters:
      - description: Menu definitions in YAML format (must contain 'menus:' root key)
        example: '"menus:\n  - id: new-item\n    parentid: dashboard\n    displayname:
          New Menu Item\n    restype: menu\n    isaction: false\n    priority: 10\n    menunumber:
          9999"'
        in: body
        name: yaml
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: 잘못된 요청 본문 또는 YAML 형식 오류'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 요청 본문의 YAML 내용으로 메뉴 등록/업데이트
      tags:
      - menus
  /api/permissions/mciam:
    post:
      consumes:
      - application/json
      description: Create a new MCIAM permission
      parameters:
      - description: Permission Info
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.MciamPermission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.MciamPermission'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create MCIAM permission
      tags:
      - permissions
  /api/permissions/mciam/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing MCIAM permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete MCIAM permission
      tags:
      - permissions
    put:
      consumes:
      - application/json
      description: Update an existing MCIAM permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      - description: Permission Info
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.MciamPermission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MciamPermission'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update MCIAM permission
      tags:
      - permissions
  /api/permissions/mciam/id/{id}:
    get:
      consumes:
      - application/json
      description: Get MCIAM permission details by ID
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MciamPermission'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get MCIAM permission by ID
      tags:
      - permissions
  /api/permissions/mciam/list:
    post:
      consumes:
      - application/json
      description: Get a list of all MCIAM permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MciamPermission'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List MCIAM permissions
      tags:
      - permissions
  /api/projects:
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Project Info
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create project
      tags:
      - projects
  /api/projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get project details by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update an existing project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project Info
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update project
      tags:
      - projects
  /api/projects/list:
    post:
      consumes:
      - application/json
      description: Get a list of all projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List projects
      tags:
      - projects
  /api/projects/name/{projectName}:
    get:
      consumes:
      - application/json
      description: Get project details by name
      parameters:
      - description: Project Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get project by name
      tags:
      - projects
  /api/roles:
    post:
      consumes:
      - application/json
      description: Create a new role
      parameters:
      - description: Role Info
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterSubRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create role
      tags:
      - roles
  /api/roles/assign/csp-roles:
    post:
      consumes:
      - application/json
      description: Create a new mapping between role and CSP role
      parameters:
      - description: Mapping Info
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterCspRoleMappingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.RoleMasterCspRoleMappingRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create role-CSP role mapping
      tags:
      - roles
  /api/roles/assign/platform-role:
    post:
      consumes:
      - application/json
      description: Assign a platform role to a user
      parameters:
      - description: Platform Role Assignment Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Assign platform role
      tags:
      - roles
  /api/roles/assign/workspace-role:
    post:
      consumes:
      - application/json
      description: Assign a workspace role to a user
      parameters:
      - description: Workspace Role Assignment Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AssignWorkspaceRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Assign workspace role
      tags:
      - roles
  /api/roles/csp-roles:
    post:
      consumes:
      - application/json
      description: Create a new csp role
      parameters:
      - description: CSP Role Creation Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterSubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create csp role
      tags:
      - roles
  /api/roles/csp-roles/{roleId}:
    delete:
      consumes:
      - application/json
      description: Delete a role
      parameters:
      - description: Role ID
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete csp role
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update role information
      parameters:
      - description: Role ID
        in: path
        name: roleId
        required: true
        type: string
      - description: Role Info
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterSubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update csp role
      tags:
      - roles
  /api/roles/csp-roles/id/{roleId}:
    get:
      consumes:
      - application/json
      description: Get csp role details by ID
      parameters:
      - description: CSP Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get csp role by ID
      tags:
      - roles
  /api/roles/csp-roles/list:
    post:
      consumes:
      - application/json
      description: Get a list of all csp roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleMaster'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List csp roles
      tags:
      - roles
  /api/roles/csp-roles/name/{roleName}:
    get:
      consumes:
      - application/json
      description: Get csp role details by Name
      parameters:
      - description: CSP Role Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get csp role by Name
      tags:
      - roles
  /api/roles/id/{roleId}:
    delete:
      consumes:
      - application/json
      description: Delete a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete role
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Get role details by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get role by ID
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update role information
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Info
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterSubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update role
      tags:
      - roles
  /api/roles/id/{roleId}/assign:
    post:
      consumes:
      - application/json
      description: Assign a role to a user
      parameters:
      - description: Role Assignment Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Assign role
      tags:
      - roles
  /api/roles/id/{roleId}/unassign:
    delete:
      consumes:
      - application/json
      description: Remove a role from a user
      parameters:
      - description: Role Removal Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove role
      tags:
      - roles
  /api/roles/id/{workspaceRoleId}/csp-roles:
    get:
      consumes:
      - application/json
      description: Get a mapping between workspace role and CSP role
      parameters:
      - description: Mapping Info
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterCspRoleMappingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMasterCspRoleMappingRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get workspace role-CSP role mapping
      tags:
      - roles
  /api/roles/list:
    post:
      consumes:
      - application/json
      description: Get a list of all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleMaster'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all roles
      tags:
      - roles
  /api/roles/menu-roles/list:
    post:
      consumes:
      - application/json
      description: Get a list of all menu roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleMaster'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List menu roles
      tags:
      - roles
  /api/roles/name/{roleName}:
    get:
      consumes:
      - application/json
      description: Get role details by Name
      parameters:
      - description: Role Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get role by Name
      tags:
      - roles
  /api/roles/platform-roles:
    post:
      consumes:
      - application/json
      description: Create a new menu role
      parameters:
      - description: Menu Role Creation Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterSubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create menu role
      tags:
      - roles
  /api/roles/platform-roles/id/{roleId}:
    delete:
      consumes:
      - application/json
      description: Delete a platform role
      parameters:
      - description: Platform Role ID
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete platform role
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Get platform role details by ID
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get platform role by ID
      tags:
      - roles
  /api/roles/platform-roles/name/{roleName}:
    get:
      consumes:
      - application/json
      description: Get menu role details by Name
      parameters:
      - description: Menu Role Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get menu role by Name
      tags:
      - roles
  /api/roles/unassign/csp-roles:
    delete:
      consumes:
      - application/json
      description: Delete a mapping between workspace role and CSP role
      parameters:
      - description: Mapping Info
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterCspRoleMappingRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete workspace role-CSP role mapping
      tags:
      - roles
  /api/roles/unassign/platform-role:
    delete:
      consumes:
      - application/json
      description: Remove a platform role from a user
      parameters:
      - description: Platform Role Removal Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove platform role
      tags:
      - roles
  /api/roles/unassign/workspace-role:
    delete:
      consumes:
      - application/json
      description: Remove a workspace role from a user
      parameters:
      - description: Workspace Role Removal Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove workspace role
      tags:
      - roles
  /api/roles/workspace-roles:
    post:
      consumes:
      - application/json
      description: Create a new workspace role
      parameters:
      - description: Workspace Role Creation Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RoleMasterSubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create workspace role
      tags:
      - roles
  /api/roles/workspace-roles/id/{roleId}:
    delete:
      consumes:
      - application/json
      description: Delete a workspace role
      parameters:
      - description: Workspace Role ID
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete workspace role
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Get workspace role details by ID
      parameters:
      - description: Workspace Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get workspace role by ID
      tags:
      - roles
  /api/roles/workspace-roles/list:
    post:
      consumes:
      - application/json
      description: Get a list of all workspace roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleMaster'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List workspace roles
      tags:
      - roles
  /api/roles/workspace-roles/name/{roleName}:
    get:
      consumes:
      - application/json
      description: Get workspace role details by Name
      parameters:
      - description: Workspace Role Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoleMaster'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get workspace role by Name
      tags:
      - roles
  /api/users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create user
      tags:
      - users
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - users
  /api/users/id/{userId}/status:
    post:
      consumes:
      - application/json
      description: Update user status (active/inactive)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/model.UserStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user status
      tags:
      - users
  /api/users/menus/list:
    post:
      consumes:
      - application/json
      description: 현재 로그인한 사용자의 Platform Role에 따라 접근 가능한 메뉴 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Menu'
            type: array
      summary: 현재 사용자의 메뉴 목록 조회
      tags:
      - menus
  /api/users/name/{username}:
    get:
      consumes:
      - application/json
      description: Get user details by username
      parameters:
      - description: Username
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by username
      tags:
      - users
  /api/users/workspaces/id/{workspaceId}/projects/list:
    get:
      consumes:
      - application/json
      description: List projects for the current user
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List user projects by workspace
      tags:
      - users
  /api/users/workspaces/list:
    post:
      consumes:
      - application/json
      description: List workspaces for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Workspace'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List user workspaces
      tags:
      - users
  /api/users/workspaces/roles/list:
    post:
      consumes:
      - application/json
      description: List workspaces and roles for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleMaster'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List user workspace and roles
      tags:
      - users
  /api/workspaces:
    post:
      consumes:
      - application/json
      description: Create a new workspace
      parameters:
      - description: Workspace Info
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/model.Workspace'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create workspace
      tags:
      - workspaces
  /api/workspaces/id/{workspaceId}:
    delete:
      consumes:
      - application/json
      description: Delete a workspace
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete workspace
      tags:
      - workspaces
    get:
      consumes:
      - application/json
      description: Get workspace details by ID
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get workspace by ID
      tags:
      - workspaces
    put:
      consumes:
      - application/json
      description: Update workspace information
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: Workspace Info
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/model.Workspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update workspace
      tags:
      - workspaces
  /api/workspaces/id/{workspaceId}/users/id/{userId}:
    get:
      consumes:
      - application/json
      description: Get roles assigned to a user in a workspace
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoleMaster'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user workspace roles
      tags:
      - roles
  /api/workspaces/list:
    post:
      consumes:
      - application/json
      description: Get a list of all workspaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Workspace'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List workspaces
      tags:
      - workspaces
  /csp-credentials:
    get:
      consumes:
      - application/json
      description: 모든 CSP 인증 정보 목록을 조회합니다
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: CSP 인증 정보 목록 조회
      tags:
      - csp-credentials
    post:
      consumes:
      - application/json
      description: 새로운 CSP 인증 정보를 생성합니다
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: 새 CSP 인증 정보 생성
      tags:
      - csp-credentials
  /csp-credentials/{id}:
    delete:
      consumes:
      - application/json
      description: CSP 인증 정보를 삭제합니다
      parameters:
      - description: Credential ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Credential not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: CSP 인증 정보 삭제
      tags:
      - csp-credentials
    get:
      consumes:
      - application/json
      description: 특정 CSP 인증 정보를 ID로 조회합니다
      parameters:
      - description: Credential ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: 'error: Credential not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: CSP 인증 정보 ID로 조회
      tags:
      - csp-credentials
    put:
      consumes:
      - application/json
      description: CSP 인증 정보를 업데이트합니다
      parameters:
      - description: Credential ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: 'error: Credential not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: CSP 인증 정보 업데이트
      tags:
      - csp-credentials
  /initial-admin:
    post:
      consumes:
      - application/json
      description: Creates the initial platform admin user with necessary permissions.
        platform admin 생성인데
      parameters:
      - description: Setup Initial Admin Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SetupInitialAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
      summary: Setup initial platform admin
      tags:
      - admin
  /mcmp-api-permission-action-mappings:
    post:
      consumes:
      - application/json
      description: Creates a new mapping between a permission and an API action
      parameters:
      - description: Mapping to create
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/mcmpapi.McmpApiPermissionActionMapping'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Create permission-action mapping
      tags:
      - mcmp-api-permission-action-mappings
  /mcmp-api-permission-action-mappings/actions/{actionId}/permissions:
    get:
      consumes:
      - application/json
      description: Returns all permissions mapped to a specific API action
      parameters:
      - description: Action ID
        in: path
        name: actionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get permissions by action ID
      tags:
      - mcmp-api-permission-action-mappings
  /mcmp-api-permission-action-mappings/actions/list:
    post:
      consumes:
      - application/json
      description: Returns all workspace actions mapped to a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mcmpapi.McmpApiAction'
            type: array
      summary: Get workspace actions by permission ID
      tags:
      - mcmp-api-permission-action-mappings
  /mcmp-api-permission-action-mappings/list:
    post:
      consumes:
      - application/json
      description: Returns all platform actions mapped to a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mcmpapi.McmpApiAction'
            type: array
      summary: List platform actions by permission ID
      tags:
      - mcmp-api-permission-action-mappings
  /mcmp-api-permission-action-mappings/permissions/{permissionId}/actions/{actionId}:
    delete:
      consumes:
      - application/json
      description: Deletes a mapping between a permission and an API action
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      - description: Action ID
        in: path
        name: actionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete permission-action mapping
      tags:
      - mcmp-api-permission-action-mappings
    put:
      consumes:
      - application/json
      description: Updates an existing mapping between a permission and an API action
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      - description: Action ID
        in: path
        name: actionId
        required: true
        type: integer
      - description: Updated mapping
        in: body
        name: mapping
        required: true
        schema:
          $ref: '#/definitions/mcmpapi.McmpApiPermissionActionMapping'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update permission-action mapping
      tags:
      - mcmp-api-permission-action-mappings
  /mcmp-api-permission-action-mappings/platforms/id/{permissionId}/actions:
    get:
      consumes:
      - application/json
      description: Returns all platform actions mapped to a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mcmpapi.McmpApiAction'
            type: array
      summary: Get platform actions by permission ID
      tags:
      - mcmp-api-permission-action-mappings
  /mcmp-apis/list:
    post:
      consumes:
      - application/json
      description: Retrieves all MCMP API service and action definitions currently
        stored in the database.
      parameters:
      - description: Filter by service name
        in: query
        name: serviceName
        type: string
      - description: Filter by action name (operationId)
        in: query
        name: actionName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved API definitions
          schema:
            $ref: '#/definitions/mcmpapi.McmpApiDefinitions'
        "500":
          description: 'message: Failed to retrieve API definitions'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get All Stored MCMP API Definitions
      tags:
      - McmpAPI
  /mcmp-apis/mcmpApiCall:
    post:
      consumes:
      - application/json
      description: Executes a defined MCMP API action with parameters structured in
        McmpApiCallRequest.
      parameters:
      - description: API Call Request
        in: body
        name: callRequest
        required: true
        schema:
          $ref: '#/definitions/model.McmpApiCallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: External API Response (structure depends on the called API)
          schema:
            type: object
        "400":
          description: 'error: Invalid request body or parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or action not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error or failed to call external API'
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: 'error: External API unavailable'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Call an external MCMP API action (Structured Request)
      tags:
      - McmpAPI
  /mcmp-apis/name/{serviceName}:
    put:
      consumes:
      - application/json
      description: Updates specific fields (e.g., BaseURL, Auth info) of an MCMP API
        service definition identified by its name. Cannot update name or version.
      parameters:
      - description: Service Name to update
        in: path
        name: serviceName
        required: true
        type: string
      - description: Fields to update (e.g., {\
        in: body
        name: updates
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Service updated successfully" // Or return updated
            service?'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Invalid service name or request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Failed to update service'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update MCMP API Service Definition
      tags:
      - McmpAPI
  /mcmp-apis/name/{serviceName}/versions/{version}/activate:
    put:
      consumes:
      - application/json
      description: Sets the specified version of an MCMP API service as the active
        one.
      parameters:
      - description: Service Name
        in: path
        name: serviceName
        required: true
        type: string
      - description: Version to activate
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: Invalid service name or version'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or version not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Failed to set active version'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Set Active Version for a Service
      tags:
      - McmpAPI
  /mcmp-apis/syncMcmpAPIs:
    post:
      consumes:
      - application/json
      description: Triggers the synchronization of MCMP API definitions from the configured
        YAML URL to the database.
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully triggered MCMP API sync'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Failed to trigger MCMP API sync'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Sync MCMP API Definitions
      tags:
      - McmpAPI
  /mcmp-apis/test/mc-infra-manager/getallns:
    get:
      description: Calls the GetAllNs action of the mc-infra-manager service via the
        CallApi service.
      produces:
      - application/json
      responses:
        "200":
          description: Response from mc-infra-manager GetAllNs
          schema:
            type: object
        "400":
          description: 'error: Bad Request (e.g., invalid parameters)'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or Action Not Found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: 'error: External API Service Unavailable'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Test Call to mc-infra-manager GetAllNs
      tags:
      - McmpAPI
      - Test
  /menus:
    post:
      consumes:
      - application/json
      description: 새로운 메뉴를 생성합니다
      parameters:
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 새 메뉴 생성
      tags:
      - menus
  /menus/id/{menuId}:
    delete:
      consumes:
      - application/json
      description: 메뉴를 삭제합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: 메뉴 삭제
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: 특정 메뉴를 ID로 조회합니다
      parameters:
      - description: Menu ID
        in: path
        name: menuId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 ID로 조회
      tags:
      - menus
    put:
      consumes:
      - application/json
      description: 메뉴 정보를 업데이트합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 정보 업데이트
      tags:
      - menus
  /projects/{id}/workspaces/{workspaceId}:
    post:
      consumes:
      - application/json
      description: 프로젝트에 워크스페이스를 연결합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 프로젝트 또는 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트에 워크스페이스 연결
      tags:
      - projects
  /resource-types:
    post:
      consumes:
      - application/json
      description: 새로운 리소스 타입을 생성합니다
      parameters:
      - description: Resource Type Info
        in: body
        name: resourceType
        required: true
        schema:
          $ref: '#/definitions/model.ResourceType'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.ResourceType'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Cloud에서 관리되는 Resource(vm, nlb, k8s 등의 그룹) 새 리소스 타입 생성
      tags:
      - resource-types
  /resource-types/framework/:frameworkId/id/:resourceTypeId:
    delete:
      consumes:
      - application/json
      description: 리소스 타입을 삭제합니다
      parameters:
      - description: Resource Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Resource Type not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 삭제
      tags:
      - resource-types
    get:
      consumes:
      - application/json
      description: 특정 리소스 타입을 ID로 조회합니다
      parameters:
      - description: Resource Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResourceType'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Resource Type not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 ID로 조회
      tags:
      - resource-types
    put:
      consumes:
      - application/json
      description: 리소스 타입 정보를 업데이트합니다
      parameters:
      - description: Resource Type ID
        in: path
        name: id
        required: true
        type: string
      - description: Resource Type Info
        in: body
        name: resourceType
        required: true
        schema:
          $ref: '#/definitions/model.ResourceType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResourceType'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Resource Type not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 업데이트
      tags:
      - resource-types
  /resource-types/list:
    post:
      consumes:
      - application/json
      description: 모든 리소스 타입 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ResourceType'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 리소스 타입 목록 조회
      tags:
      - resource-types
  /roles/{roleType}/{roleId}/mciam-permissions:
    get:
      consumes:
      - application/json
      description: 특정 역할의 MC-IAM 권한 ID 목록을 조회합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 권한 ID 목록
          schema:
            items:
              type: string
            type: array
      summary: 역할의 MC-IAM 권한 목록 조회 - Renamed
      tags:
      - roles
      - mciam-permissions
  /roles/{roleType}/{roleId}/mciam-permissions/{permissionId}:
    delete:
      consumes:
      - application/json
      description: 역할에서 MC-IAM 권한을 제거합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: MC-IAM 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에서 MC-IAM 권한 제거 - Renamed
      tags:
      - roles
      - mciam-permissions
    post:
      consumes:
      - application/json
      description: 역할에 MC-IAM 권한을 할당합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: MC-IAM 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에 MC-IAM 권한 할당 - Renamed
      tags:
      - roles
      - mciam-permissions
  /setup/check-user-roles:
    get:
      consumes:
      - application/json
      description: Check all roles assigned to a user. 특정 유저가 가진 role 목록을 조회합니다.
      parameters:
      - description: Username to check roles
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check user roles
      tags:
      - admin
  /setup/sync-projects:
    post:
      consumes:
      - application/json
      description: mc-infra-manager의 네임스페이스 목록을 조회하여 로컬 DB에 없는 프로젝트를 추가합니다.
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Project synchronization successful'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류 또는 동기화 실패'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: mc-infra-manager와 프로젝트 동기화
      tags:
      - projects
  /users/menus-tree/list:
    post:
      consumes:
      - application/json
      description: 현재 로그인한 사용자의 Platform Role에 따라 접근 가능한 메뉴 목록을 트리 구조로 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MenuTreeNode'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 현재 사용자의 메뉴 트리 조회
      tags:
      - menus
  /workspaces/{id}/users:
    get:
      consumes:
      - application/json
      description: Get users in a workspace
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get workspace users
      tags:
      - workspaces
    post:
      consumes:
      - application/json
      description: Add a user to a workspace
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: User Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add user to workspace
      tags:
      - workspaces
  /workspaces/{id}/users/{userId}:
    delete:
      consumes:
      - application/json
      description: Remove a user from a workspace
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove user from workspace
      tags:
      - workspaces
  /workspaces/{workspaceId}/users/list:
    post:
      consumes:
      - application/json
      description: 워크스페이스에 속한 사용자와 역할 목록을 조회합니다
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserWorkspaceRole'
            type: array
        "400":
          description: 'error: Invalid workspace ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 워크스페이스에 속한 사용자와 역할 목록 조회
      tags:
      - workspaces
  /workspaces/all/users/list:
    post:
      consumes:
      - application/json
      description: 모든 워크스페이스에 할당된 사용자와 역할 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.WorkspaceWithUsersAndRoles'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 모든 워크스페이스의 사용자와 역할 목록 조회
      tags:
      - workspaces
  /workspaces/assign/projects:
    post:
      consumes:
      - application/json
      description: 워크스페이스에 프로젝트를 추가합니다
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: 'error: Invalid request'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace or Project not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스에 프로젝트 추가
      tags:
      - workspaces
  /workspaces/name/{workspaceName}:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스를 이름으로 조회합니다
      parameters:
      - description: Workspace Name
        in: path
        name: workspaceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 이름으로 조회
      tags:
      - workspaces
  /workspaces/projects/list:
    post:
      consumes:
      - application/json
      description: 특정 워크스페이스에 속한 프로젝트 목록을 조회합니다
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Workspace not found'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스의 프로젝트 목록 조회
      tags:
      - workspaces
  /workspaces/temporary-credentials:
    post:
      consumes:
      - application/json
      description: Get temporary credentials for CSP
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get temporary credentials
      tags:
      - csp-credentials
  /workspaces/unassign/projects:
    delete:
      consumes:
      - application/json
      description: Remove a project from a workspace
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Remove project from workspace
      tags:
      - workspaces
  /workspaces/users:
    post:
      consumes:
      - application/json
      description: 유저가 속한 모든 워크스페이스 목록을 조회합니다
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.WorkspaceWithUsersAndRoles'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 목록 조회
      tags:
      - workspaces
  /workspaces/workspace-ticket:
    post:
      consumes:
      - application/json
      description: 워크스페이스 티켓 설정
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Workspace ticket set successfully'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 티켓 설정
      tags:
      - auth
  /api/roles/csp-roles/batch:
    post:
      consumes:
      - application/json
      description: Create multiple new csp roles
      parameters:
      - description: Multiple CSP Role Creation Info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateCspRolesRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/model.CspRole'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create multiple csp roles
      tags:
      - roles
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
