version: '3.8'

services:
  mc-iam-manager:
    container_name: mciam-manager
    build:
      context: . # Changed build context to project root
      dockerfile: dockerfiles/mc-iam-manager/Dockerfile.mciammanager # Adjusted Dockerfile path relative to new context
    ports:
      - "${PORT:-8082}:${PORT:-8082}"
    env_file:
      - .env
    depends_on:
      # postgres: # Removed postgres dependency
      #   condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - mciam-network
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: mciam-keycloak
    command:
      - start-dev
    volumes:
      - ./dockercontainer-volume/keycloak/data/:/opt/keycloak/data/
    environment:
      # KC_DB related variables removed as postgres is not included
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin_password}
      KC_HOSTNAME: ${DOMAIN_NAME:-localhost} # Use DOMAIN_NAME
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_PROXY: edge
    ports:
      - "8080:8080"
    # depends_on: # Removed postgres dependency
    #   postgres:
    #     condition: service_healthy
    networks:
      - mciam-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:1.25-alpine
    container_name: mciam-nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost} # Use DOMAIN_NAME
    volumes:
      - ./dockerfiles/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./dockercontainer-volume/certs:/etc/nginx/certs:ro
      - ./dockercontainer-volume/certbot/www:/var/www/certbot:ro
    depends_on:
      - keycloak
      - mc-iam-manager
    networks:
      - mciam-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: mciam-certbot
    volumes:
      - ./dockercontainer-volume/certs:/etc/letsencrypt
      - ./dockercontainer-volume/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    networks:
      - mciam-network
    # entrypoint: ... # Needs proper setup

networks:
  mciam-network:
    driver: bridge
