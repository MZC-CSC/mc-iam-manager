sequenceDiagram
    participant Client
    participant Router as main.go (Echo)
    participant AuthMiddleware as middleware.AuthMiddleware
    participant UserHandler as handler.UserHandler
    participant UserService as service.UserService
    participant KeycloakService as service.KeycloakService
    participant UserRepo as repository.UserRepository
    participant Keycloak

    Client->>+Router: POST /api/users (Body: User Info, Header: Auth Token)
    Router->>+AuthMiddleware: Verify Token
    AuthMiddleware-->>-Router: Token OK (Set User Info in Context)
    Router->>+UserHandler: CreateUser(c)
    UserHandler->>UserHandler: checkRoleFromContext(c, ["admin", "platformAdmin"])
    alt Permission Denied
        UserHandler-->>-Router: 403 Forbidden
        Router-->>-Client: 403 Forbidden
    else Permission Granted
        UserHandler->>UserHandler: Bind Request Body (model.User)
        UserHandler->>+UserService: CreateUser(ctx, user)
        UserService->>+KeycloakService: CreateUser(ctx, user)
        KeycloakService->>+Keycloak: Create User API Call
        Keycloak-->>-KeycloakService: New Keycloak User ID (kcId)
        KeycloakService-->>-UserService: kcId
        UserService->>+UserRepo: CreateDbUser(user with kcId)
        UserRepo-->>-UserService: Created DB User (or error)
        UserService-->>-UserHandler: Success (or error)
        alt Error Creating User
            UserHandler-->>-Router: 500 Internal Server Error
            Router-->>-Client: 500 Internal Server Error
        else Success
            UserHandler-->>-Router: 201 Created (User Info from Request)
            Router-->>-Client: 201 Created (User Info from Request)
        end
    end
