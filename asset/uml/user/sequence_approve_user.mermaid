sequenceDiagram
    participant Client
    participant Router as main.go (Echo)
    participant AuthMiddleware as middleware.AuthMiddleware
    participant UserHandler as handler.UserHandler
    participant UserService as service.UserService
    participant KeycloakService as service.KeycloakService
    participant UserRepo as repository.UserRepository
    participant Keycloak

    Client->>+Router: POST /api/users/{kcUserId}/approve (Header: Auth Token)
    Router->>+AuthMiddleware: Verify Token
    AuthMiddleware-->>-Router: Token OK (Set User Info)
    Router->>+UserHandler: ApproveUser(c)
    UserHandler->>UserHandler: checkRoleFromContext(c, ["admin", "platformAdmin"])
    alt Permission Denied
        UserHandler-->>-Router: 403 Forbidden
        Router-->>-Client: 403 Forbidden
    else Permission Granted
        UserHandler->>UserHandler: Get kcUserId from path
        UserHandler->>+UserService: ApproveUser(ctx, kcUserId)
        UserService->>+KeycloakService: EnableUser(ctx, kcUserId)
        KeycloakService->>+Keycloak: Get User by ID API Call
        Keycloak-->>-KeycloakService: User Info
        KeycloakService->>+Keycloak: Update User API Call (Set enabled=true)
        Keycloak-->>-KeycloakService: Success/Error
        KeycloakService-->>-UserService: Success/Error (Enable User)
        alt Keycloak Enable Failed
            UserService-->>-UserHandler: Error
            UserHandler-->>-Router: 500 Internal Server Error
            Router-->>-Client: 500 Internal Server Error
        else Keycloak Enable Success
            UserService->>UserService: SyncUser(ctx, kcUserId) # Call internal SyncUser logic
            %% SyncUser internal logic (Simplified)
            UserService->>+UserRepo: FindByKcID(kcUserId)
            UserRepo-->>-UserService: DB User (or nil)
            alt DB User Not Found
                UserService->>+KeycloakService: GetUser(ctx, kcUserId)
                KeycloakService-->>-UserService: Keycloak User Info
                UserService->>+UserRepo: CreateDbUser(newUser)
                UserRepo-->>-UserService: Created DB User
            end
            UserService-->>-UserHandler: Success (Approve User)
            UserHandler-->>-Router: 204 No Content
            Router-->>-Client: 204 No Content
        end
    end
