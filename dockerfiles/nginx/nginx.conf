# Basic Nginx configuration for MC-IAM Manager

# user nginx; # Optional: Run as a specific user
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # SSL Settings (Uncomment and configure if using HTTPS)
    # ssl_protocols TLSv1.2 TLSv1.3; # Dropping TLSv1.0 and TLSv1.1 is recommended
    # ssl_prefer_server_ciphers on;
    # ssl_dhparam /etc/nginx/dhparam.pem; # Generate with: openssl dhparam -out /etc/nginx/dhparam.pem 4096
    # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    # ssl_session_timeout 1d;
    # ssl_session_cache shared:SSL:10m; # about 40000 sessions
    # ssl_session_tickets off; # Requires nginx >= 1.5.9
    # ssl_stapling on; # Requires nginx >= 1.3.7
    # ssl_stapling_verify on; # Requires nginx => 1.3.7
    # resolver 8.8.8.8 8.8.4.4 valid=300s; # Or your internal resolver
    # resolver_timeout 5s;
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    # add_header X-Frame-Options DENY;
    # add_header X-Content-Type-Options nosniff;
    # add_header X-XSS-Protection "1; mode=block";

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Load virtual host configs
    include /etc/nginx/conf.d/*.conf;

    # Default server to prevent requests to IP address directly (optional)
    # server {
    #     listen 80 default_server;
    #     listen [::]:80 default_server;
    #     server_name _;
    #     return 444; # Or return a specific page
    # }
}

# Example virtual host configuration (put in conf.d/default.conf or similar)
# Needs to be created separately or adjusted here.
#
# server {
#     listen 80;
#     server_name ${DOMAIN_NAME}; # From docker-compose environment
#
#     # ACME challenge location for Certbot
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
#
#     # Redirect all HTTP to HTTPS (Uncomment if using SSL)
#     # location / {
#     #     return 301 https://$host$request_uri;
#     # }
#
#     # If not using SSL, proxy directly (Example)
#     location / {
#         proxy_pass http://mciam-manager:8082; # Proxy to mc-iam-manager service
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#
#     location /auth/ { # Proxy Keycloak requests
#         proxy_pass http://mciam-keycloak:8080/auth/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host;
#         proxy_set_header X-Forwarded-Server $host;
#     }
# }
#
# # HTTPS server block (Uncomment and configure if using SSL)
# # server {
# #     listen 443 ssl http2;
# #     server_name ${DOMAIN_NAME};
# #
# #     ssl_certificate /etc/nginx/certs/live/${DOMAIN_NAME}/fullchain.pem;
# #     ssl_certificate_key /etc/nginx/certs/live/${DOMAIN_NAME}/privkey.pem;
# #     include /etc/nginx/options-ssl-nginx.conf; # Optional: Separate SSL options
# #     ssl_dhparam /etc/nginx/dhparam.pem;
# #
# #     location / {
# #         proxy_pass http://mciam-manager:8082;
# #         proxy_set_header Host $host;
# #         proxy_set_header X-Real-IP $remote_addr;
# #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #         proxy_set_header X-Forwarded-Proto $scheme;
# #     }
# #
# #     location /auth/ {
# #         proxy_pass http://mciam-keycloak:8080/auth/;
# #         proxy_set_header Host $host;
# #         proxy_set_header X-Real-IP $remote_addr;
# #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #         proxy_set_header X-Forwarded-Proto $scheme;
# #         proxy_set_header X-Forwarded-Host $host;
# #         proxy_set_header X-Forwarded-Server $host;
# #     }
# # }
