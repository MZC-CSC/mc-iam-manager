version: '3.8'

services:
  mc-iam-manager:
    container_name: mciam-manager
    build:
      context: .
      dockerfile: dockerfiles/mc-iam-manager/Dockerfile.mciammanager
    ports:
      - "${MCIAMMANAGER_PORT}:${MCIAMMANAGER_PORT}"
    env_file:
      - .env
    depends_on:
      mc-iam-postgres:
        condition: service_healthy
      mc-iam-keycloak:
        condition: service_healthy
    networks:
      - mcmp-network
    restart: unless-stopped

  mc-iam-postgres:
    image: postgres:16
    container_name: mciam-postgres
    environment:
      POSTGRES_USER: ${IAM_DB_USER}
      POSTGRES_PASSWORD: ${IAM_DB_PASSWORD}
      POSTGRES_DB: ${IAM_DB_DATABASE_NAME}
    volumes:
      - ./dockercontainer-volume/postgres/data/:/var/lib/postgresql/data
      - ./dockerfiles/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - mcmp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${IAM_DB_USER} -d ${IAM_DB_DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mc-iam-keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: mciam-keycloak
    command:
      - start-dev
    volumes:
      - ./dockercontainer-volume/keycloak/data/:/opt/keycloak/data/
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: mc-iam-postgres
      KC_DB_URL_DATABASE: ${IAM_DB_DATABASE_NAME}
      KC_DB_URL_PORT: ${IAM_DB_PORT}
      KC_DB_USERNAME: ${IAM_DB_USER}
      KC_DB_PASSWORD: ${IAM_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: ${DOMAIN_NAME}
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_PROXY: edge
    ports:
      - "8080:8080"
    depends_on:
      mc-iam-postgres:
        condition: service_healthy
    networks:
      - mcmp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 60s
      timeout: 30s
      retries: 10
      start_period: 120s

  mcmp-nginx:
    image: nginx:1.25-alpine
    container_name: mciam-nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - ./dockerfiles/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./dockercontainer-volume/certs:/etc/nginx/certs:ro
      - ./dockercontainer-volume/certbot/www:/var/www/certbot:ro
    depends_on:
      - mc-iam-keycloak
      - mc-iam-manager
    networks:
      - mcmp-network
    restart: unless-stopped

networks:
  mcmp-network:
    driver: bridge
