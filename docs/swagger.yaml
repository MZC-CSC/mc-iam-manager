basePath: /api/v1
definitions:
  idp.UserLogin:
    properties:
      id:
        type: string
      password:
        type: string
    type: object
  mcmpapi.ApiQueryParam:
    properties:
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
    type: object
  mcmpapi.McmpApiAuthInfo:
    properties:
      password:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  mcmpapi.McmpApiCallRequest:
    properties:
      actionName:
        description: Target action name (operationId)
        type: string
      requestParams:
        allOf:
        - $ref: '#/definitions/mcmpapi.McmpApiRequestParams'
        description: Parameters for the external API call
      serviceName:
        description: Target service name
        type: string
    required:
    - actionName
    - serviceName
    type: object
  mcmpapi.McmpApiDefinitions:
    properties:
      serviceActions:
        additionalProperties:
          additionalProperties:
            $ref: '#/definitions/mcmpapi.McmpApiServiceAction'
          type: object
        description: Use renamed ServiceAction
        type: object
      services:
        additionalProperties:
          $ref: '#/definitions/mcmpapi.McmpApiServiceDefinition'
        description: Use renamed ServiceDefinition
        type: object
    type: object
  mcmpapi.McmpApiRequestParams:
    properties:
      body:
        description: Request body (accept any JSON structure) - Changed from json.RawMessage
          for swag compatibility
      pathParams:
        additionalProperties:
          type: string
        description: Parameters to replace in the resource path (e.g., {userId})
        type: object
      queryParams:
        additionalProperties:
          type: string
        description: Parameters to append as query string (?key=value)
        type: object
    type: object
  mcmpapi.McmpApiServiceAction:
    properties:
      description:
        type: string
      method:
        type: string
      resourcePath:
        type: string
    type: object
  mcmpapi.McmpApiServiceDefinition:
    properties:
      auth:
        allOf:
        - $ref: '#/definitions/mcmpapi.McmpApiAuthInfo'
        description: Use renamed AuthInfo
      baseURL:
        type: string
      version:
        type: string
    type: object
  mcmpapi.ServiceApiCallRequest:
    type: object
  model.Menu:
    properties:
      display_name:
        type: string
      id:
        type: string
      is_action:
        type: boolean
      menu_number:
        type: integer
      parent_id:
        type: string
      priority:
        type: integer
      res_type:
        type: string
    type: object
  model.MenuTreeNode:
    properties:
      children:
        description: Slice of pointers to child nodes
        items:
          $ref: '#/definitions/model.MenuTreeNode'
        type: array
      display_name:
        type: string
      id:
        type: string
      is_action:
        type: boolean
      menu_number:
        type: integer
      parent_id:
        type: string
      priority:
        type: integer
      res_type:
        type: string
    type: object
  model.Permission:
    properties:
      created_at:
        type: string
      description:
        description: Increased size to match roles
        type: string
      id:
        description: Changed to string
        type: string
      name:
        description: Assuming Name column exists or needs to be added
        type: string
      updated_at:
        type: string
    type: object
  model.PlatformRole:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  model.Project:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      nsid:
        description: Namespace ID
        type: string
      updated_at:
        type: string
      workspaces:
        description: M:N relationship
        items:
          $ref: '#/definitions/model.Workspace'
        type: array
    type: object
  model.User:
    properties:
      created_at:
        type: string
      description:
        type: string
      email:
        description: Ignore Email for DB
        type: string
      enabled:
        description: Enabled status managed by Keycloak
        type: boolean
      firstName:
        description: Ignore FirstName for DB
        type: string
      id:
        description: DB에 저장되는 정보 (mcmp_users 테이블)
        type: integer
      kc_id:
        description: Keycloak User ID
        type: string
      lastName:
        description: Ignore LastName for DB
        type: string
      platform_roles:
        description: 관계 정의 (Foreign Key는 DB ID인 'ID' 필드를 참조해야 함)
        items:
          $ref: '#/definitions/model.PlatformRole'
        type: array
      updated_at:
        type: string
      username:
        description: Keycloak 정보
        type: string
      workspace_roles:
        description: Changed foreignKey to ID
        items:
          $ref: '#/definitions/model.WorkspaceRole'
        type: array
    type: object
  model.Workspace:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      projects:
        description: M:N relationship
        items:
          $ref: '#/definitions/model.Project'
        type: array
      updated_at:
        type: string
    type: object
  model.WorkspaceRole:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        description: 이름은 고유해야 함
        type: string
      updated_at:
        type: string
    type: object
  service.HealthStatus:
    properties:
      db_connection:
        type: string
      keycloak_admin_login:
        type: string
      keycloak_client_check:
        type: string
      keycloak_realm_check:
        type: string
      mcmp_actions_count:
        type: integer
      mcmp_services_count:
        type: integer
      menus_count:
        type: integer
      platform_roles_count:
        type: integer
      workspace_roles_count:
        type: integer
    type: object
  service.UserWithRoles:
    properties:
      roles:
        items:
          $ref: '#/definitions/model.WorkspaceRole'
        type: array
      user:
        $ref: '#/definitions/model.User'
    type: object
  service.WorkspaceRoleInfo:
    properties:
      role:
        $ref: '#/definitions/model.WorkspaceRole'
      workspace:
        $ref: '#/definitions/model.Workspace'
    type: object
host: localhost:3000
info:
  contact: {}
  description: MC IAM Manager API Documentation
  title: MC IAM Manager API
  version: "1.0"
paths:
  /api/call:
    post:
      consumes:
      - application/json
      description: Executes a defined MCMP API action with query parameters and a
        request body.
      parameters:
      - description: Generic API Call Request
        in: body
        name: callRequest
        required: true
        schema:
          $ref: '#/definitions/mcmpapi.ServiceApiCallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: External API Response (structure depends on the called API)
          schema:
            type: object
        "400":
          description: 'error: Invalid request body or parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or action not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error or failed to call external API'
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: 'error: External API unavailable'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Call an external MCMP API action (Generic Request)
      tags:
      - McmpAPI
  /api/permissions:
    get:
      consumes:
      - application/json
      description: 모든 권한 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
      summary: 권한 목록 조회
      tags:
      - permissions
    post:
      consumes:
      - application/json
      description: 새로운 권한을 생성합니다.
      parameters:
      - description: 권한 정보
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.Permission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Permission'
      summary: 권한 생성
      tags:
      - permissions
  /api/permissions/{id}:
    delete:
      consumes:
      - application/json
      description: 권한을 삭제합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 권한 삭제
      tags:
      - permissions
    get:
      consumes:
      - application/json
      description: ID로 특정 권한을 조회합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Permission'
      summary: ID로 권한 조회
      tags:
      - permissions
    put:
      consumes:
      - application/json
      description: 기존 권한을 수정합니다.
      parameters:
      - description: 권한 ID
        in: path
        name: id
        required: true
        type: string
      - description: 권한 정보
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.Permission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Permission'
      summary: 권한 수정
      tags:
      - permissions
  /api/platform-roles:
    get:
      consumes:
      - application/json
      description: 모든 플랫폼 역할을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PlatformRole'
            type: array
      summary: 플랫폼 역할 목록 조회
      tags:
      - platform-roles
    post:
      consumes:
      - application/json
      description: 새로운 플랫폼 역할을 생성합니다.
      parameters:
      - description: Platform Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.PlatformRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 생성
      tags:
      - platform-roles
  /api/platform-roles/{id}:
    delete:
      consumes:
      - application/json
      description: 플랫폼 역할을 삭제합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 플랫폼 역할 삭제
      tags:
      - platform-roles
    get:
      consumes:
      - application/json
      description: ID로 플랫폼 역할을 조회합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 조회
      tags:
      - platform-roles
    put:
      consumes:
      - application/json
      description: 기존 플랫폼 역할을 수정합니다.
      parameters:
      - description: Platform Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Platform Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.PlatformRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PlatformRole'
      summary: 플랫폼 역할 수정
      tags:
      - platform-roles
  /api/roles/{roleType}/{roleId}/permissions:
    get:
      consumes:
      - application/json
      description: 특정 역할의 권한 목록을 조회합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
      summary: 역할의 권한 목록 조회
      tags:
      - permissions
  /api/roles/{roleType}/{roleId}/permissions/{permissionId}:
    delete:
      consumes:
      - application/json
      description: 역할에서 권한을 제거합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에서 권한 제거
      tags:
      - permissions
    post:
      consumes:
      - application/json
      description: 역할에 권한을 할당합니다.
      parameters:
      - description: 역할 타입 ('platform' or 'workspace')
        in: path
        name: roleType
        required: true
        type: string
      - description: 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      - description: 권한 ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: 역할에 권한 할당
      tags:
      - permissions
  /auth/login:
    post:
      consumes:
      - application/json
      description: 사용자 ID와 비밀번호로 로그인하여 JWT 토큰을 발급받습니다.
      parameters:
      - description: 로그인 정보 (Id, Password)
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/idp.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: 로그인 성공 및 토큰 정보 (gocloak.JWT 구조체와 유사)
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: 잘못된 요청 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: 인증 실패 (자격 증명 오류)'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: 계정이 비활성화되었거나 승인 대기 중입니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류 (Keycloak 통신, DB 동기화 등)'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 로그인
      tags:
      - auth
  /mcmp-apis:
    get:
      consumes:
      - application/json
      description: Retrieves all MCMP API service and action definitions currently
        stored in the database.
      parameters:
      - description: Filter by service name
        in: query
        name: serviceName
        type: string
      - description: Filter by action name (operationId)
        in: query
        name: actionName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved API definitions
          schema:
            $ref: '#/definitions/mcmpapi.McmpApiDefinitions'
        "500":
          description: 'message: Failed to retrieve API definitions'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get All Stored MCMP API Definitions
      tags:
      - McmpAPI
  /mcmp-apis/{serviceName}:
    put:
      consumes:
      - application/json
      description: Updates specific fields (e.g., BaseURL, Auth info) of an MCMP API
        service definition identified by its name. Cannot update name or version.
      parameters:
      - description: Service Name to update
        in: path
        name: serviceName
        required: true
        type: string
      - description: Fields to update (e.g., {\
        in: body
        name: updates
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Service updated successfully" // Or return updated
            service?'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Invalid service name or request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Failed to update service'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update MCMP API Service Definition
      tags:
      - McmpAPI
  /mcmp-apis/{serviceName}/versions/{version}/activate:
    put:
      consumes:
      - application/json
      description: Sets the specified version of an MCMP API service as the active
        one.
      parameters:
      - description: Service Name
        in: path
        name: serviceName
        required: true
        type: string
      - description: Version to activate
        in: path
        name: version
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: Invalid service name or version'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or version not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Failed to set active version'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Set Active Version for a Service
      tags:
      - McmpAPI
  /mcmp-apis/call:
    post:
      consumes:
      - application/json
      description: Executes a defined MCMP API action with parameters structured in
        McmpApiCallRequest.
      parameters:
      - description: API Call Request
        in: body
        name: callRequest
        required: true
        schema:
          $ref: '#/definitions/mcmpapi.McmpApiCallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: External API Response (structure depends on the called API)
          schema:
            type: object
        "400":
          description: 'error: Invalid request body or parameters'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or action not found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal server error or failed to call external API'
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: 'error: External API unavailable'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Call an external MCMP API action (Structured Request)
      tags:
      - McmpAPI
  /mcmp-apis/sync:
    post:
      consumes:
      - application/json
      description: Triggers the synchronization of MCMP API definitions from the configured
        YAML URL to the database.
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully triggered MCMP API sync" // Updated
            message'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'message: Failed to trigger MCMP API sync" // Updated message'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Sync MCMP API Definitions
      tags:
      - McmpAPI // Updated tag
  /mcmp-apis/test/mc-infra-manager/getallns:
    get:
      description: Calls the GetAllNs action of the mc-infra-manager service via the
        CallApi service.
      produces:
      - application/json
      responses:
        "200":
          description: Response from mc-infra-manager GetAllNs
          schema:
            type: object
        "400":
          description: 'error: Bad Request (e.g., invalid parameters)'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Service or Action Not Found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: 'error: External API Service Unavailable'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Test Call to mc-infra-manager GetAllNs
      tags:
      - McmpAPI
      - Test
  /menus:
    get:
      consumes:
      - application/json
      description: 현재 로그인한 사용자의 Platform Role에 따라 접근 가능한 메뉴 목록을 트리 구조로 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MenuTreeNode'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 현재 사용자의 메뉴 트리 조회
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: 새로운 메뉴를 생성합니다
      parameters:
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 새 메뉴 생성
      tags:
      - menus
  /menus/{id}:
    delete:
      consumes:
      - application/json
      description: 메뉴를 삭제합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: 메뉴 삭제
      tags:
      - menus
    get:
      consumes:
      - application/json
      description: 특정 메뉴를 ID로 조회합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 ID로 조회
      tags:
      - menus
    put:
      consumes:
      - application/json
      description: 메뉴 정보를 업데이트합니다
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: string
      - description: Menu Info
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Menu'
      security:
      - BearerAuth: []
      summary: 메뉴 정보 업데이트
      tags:
      - menus
  /menus/all:
    get:
      consumes:
      - application/json
      description: 모든 메뉴 목록을 트리 구조로 조회합니다. 관리자 권한이 필요합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.MenuTreeNode'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 모든 메뉴 트리 조회 (관리자용)
      tags:
      - menus
  /menus/register-from-body:
    post:
      consumes:
      - text/plain
      description: 요청 본문에 포함된 YAML 텍스트를 파싱하여 메뉴를 데이터베이스에 등록하거나 업데이트합니다. Content-Type은
        text/plain, text/yaml, application/yaml 등을 권장합니다.
      parameters:
      - description: Menu definitions in YAML format (must contain 'menus:' root key)
        example: '"menus:\n  - id: new-item\n    parentid: dashboard\n    displayname:
          New Menu Item\n    restype: menu\n    isaction: false\n    priority: 10\n    menunumber:
          9999"'
        in: body
        name: yaml
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: 잘못된 요청 본문 또는 YAML 형식 오류'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 요청 본문의 YAML 내용으로 메뉴 등록/업데이트
      tags:
      - menus
  /menus/register-from-yaml:
    post:
      consumes:
      - application/json
      description: filePath 쿼리 파라미터로 지정된 로컬 YAML 파일 또는 파라미터가 없을 경우 .env 파일의 MCWEBCONSOLE_MENUYAML
        URL에서 메뉴를 가져와 데이터베이스에 등록/업데이트합니다. URL에서 가져올 경우 asset/menu/menu.yaml에 저장됩니다.
      parameters:
      - description: YAML 파일 경로 (선택 사항, 없으면 .env의 URL 또는 기본 로컬 경로 사용)
        in: query
        name: filePath
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Successfully registered menus from YAML'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 실패 메시지'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: YAML 파일 또는 URL에서 메뉴 등록/업데이트
      tags:
      - menus
  /projects:
    get:
      consumes:
      - application/json
      description: 모든 프로젝트 목록을 조회합니다 (연결된 워크스페이스 정보 포함).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 모든 프로젝트 조회
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: 새로운 프로젝트를 생성합니다.
      parameters:
      - description: 프로젝트 정보 (ID, CreatedAt, UpdatedAt, Workspaces 제외)
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: 'error: 잘못된 요청 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 생성
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: 프로젝트를 삭제합니다. 연결된 워크스페이스와의 관계도 해제됩니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 프로젝트 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 프로젝트를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 삭제
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: ID로 특정 프로젝트를 조회합니다 (연결된 워크스페이스 정보 포함).
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: 'error: 잘못된 프로젝트 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 프로젝트를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: ID로 프로젝트 조회
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: 기존 프로젝트 정보를 부분적으로 수정합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      - description: '수정할 필드와 값 (예: {\'
        in: body
        name: updates
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 업데이트된 프로젝트 정보
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: 'error: 잘못된 요청 형식 또는 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 프로젝트를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트 수정
      tags:
      - projects
  /projects/{id}/workspaces/{workspaceId}:
    delete:
      consumes:
      - application/json
      description: 특정 프로젝트에서 워크스페이스 연결을 해제합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트에서 워크스페이스 연결 해제
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: 특정 프로젝트에 워크스페이스를 연결합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 프로젝트 또는 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 프로젝트에 워크스페이스 연결
      tags:
      - projects
  /projects/name/{name}:
    get:
      consumes:
      - application/json
      description: 이름으로 특정 프로젝트를 조회합니다 (연결된 워크스페이스 정보 포함).
      parameters:
      - description: 프로젝트 이름
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "404":
          description: 'error: 프로젝트를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 이름으로 프로젝트 조회
      tags:
      - projects
  /readyz:
    get:
      description: 애플리케이션의 준비 상태를 확인합니다. status=detail 쿼리 파라미터로 상세 상태를 확인할 수 있습니다.
      parameters:
      - description: 상세 상태 확인 여부 ('detail')
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 상세 상태 정보 (status=detail)
          schema:
            $ref: '#/definitions/service.HealthStatus'
        "503":
          description: 상세 상태 확인 중 오류 발생 시
          schema:
            $ref: '#/definitions/service.HealthStatus'
      summary: 애플리케이션 준비 상태 확인
      tags:
      - Health
  /user/workspaces:
    get:
      description: 현재 로그인한 사용자가 접근 가능한 워크스페이스 및 각 워크스페이스에서의 역할 목록을 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 워크스페이스 및 역할 정보 목록 반환
          schema:
            items:
              $ref: '#/definitions/service.WorkspaceRoleInfo'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 내 워크스페이스 및 역할 목록 조회
      tags:
      - users
      - workspaces
      - roles
      - me
  /users:
    get:
      description: 모든 사용자 목록을 조회합니다. 'admin' 또는 'platformAdmin' 역할이 필요합니다.
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 사용자 목록 반환
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden (권한 부족)'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 목록 조회 (관리자용)
      tags:
      - users
    post:
      responses: {}
      security:
      - BearerAuth: []
  /users/{id}:
    put:
      parameters:
      - description: User DB ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      security:
      - BearerAuth: []
  /users/{id}/approve:
    post:
      consumes:
      - application/json
      description: 지정된 사용자를 활성화하고 시스템 사용을 승인합니다. 'admin' 또는 'platformadmin' 역할이 필요합니다.
      parameters:
      - description: 사용자 Keycloak ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 사용자 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'error: Unauthorized'
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 'error: Forbidden (권한 부족)'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 사용자 승인 (관리자용)
      tags:
      - users
  /workspaces:
    get:
      consumes:
      - application/json
      description: 모든 워크스페이스 목록을 조회합니다 (연결된 프로젝트 정보 포함).
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Workspace'
            type: array
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 모든 워크스페이스 조회
      tags:
      - workspaces
    post:
      consumes:
      - application/json
      description: 새로운 워크스페이스를 생성합니다.
      parameters:
      - description: 워크스페이스 정보 (ID, CreatedAt, UpdatedAt, Projects 제외)
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/model.Workspace'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: 'error: 잘못된 요청 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 생성
      tags:
      - workspaces
  /workspaces/{id}:
    delete:
      consumes:
      - application/json
      description: 워크스페이스를 삭제합니다. 연결된 프로젝트와의 관계도 해제됩니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 워크스페이스 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 삭제
      tags:
      - workspaces
    get:
      consumes:
      - application/json
      description: ID로 특정 워크스페이스를 조회합니다 (연결된 프로젝트 정보 포함).
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: 'error: 잘못된 워크스페이스 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: ID로 워크스페이스 조회
      tags:
      - workspaces
    put:
      consumes:
      - application/json
      description: 기존 워크스페이스 정보를 부분적으로 수정합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: id
        required: true
        type: integer
      - description: '수정할 필드와 값 (예: {\'
        in: body
        name: updates
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 업데이트된 워크스페이스 정보
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: 'error: 잘못된 요청 형식 또는 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 수정
      tags:
      - workspaces
  /workspaces/{id}/projects:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스 ID에 연결된 모든 프로젝트 목록을 조회합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 프로젝트 목록 반환
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "400":
          description: 'error: 잘못된 워크스페이스 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스에 연결된 프로젝트 목록 조회
      tags:
      - workspaces
  /workspaces/{id}/projects/{projectId}:
    delete:
      consumes:
      - application/json
      description: 특정 워크스페이스에서 프로젝트 연결을 해제합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 프로젝트 ID
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스에서 프로젝트 연결 해제
      tags:
      - workspaces
    post:
      consumes:
      - application/json
      description: 특정 워크스페이스에 프로젝트를 연결합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 프로젝트 ID
        in: path
        name: projectId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 워크스페이스 또는 프로젝트를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스에 프로젝트 연결
      tags:
      - workspaces
  /workspaces/{id}/users:
    get:
      consumes:
      - application/json
      description: 특정 워크스페이스에 속한 모든 사용자와 각 사용자의 역할을 조회합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 사용자 및 역할 목록 반환
          schema:
            items:
              $ref: '#/definitions/service.UserWithRoles'
            type: array
        "400":
          description: 'error: 잘못된 워크스페이스 ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 사용자 및 역할 목록 조회
      tags:
      - workspaces
      - users
      - roles
  /workspaces/{workspaceId}/users/{userId}/roles/{roleId}:
    delete:
      consumes:
      - application/json
      description: 특정 워크스페이스 내의 사용자에게서 특정 워크스페이스 역할을 제거합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      - description: 사용자 DB ID (db_id)
        in: path
        name: userId
        required: true
        type: integer
      - description: 워크스페이스 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 역할 또는 워크스페이스를 찾을 수 없습니다" // User existence check is
            optional here'
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 'error: 역할이 해당 워크스페이스에 속하지 않음'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 사용자 역할 제거
      tags:
      - workspaces
      - roles
      - users
    post:
      consumes:
      - application/json
      description: 특정 워크스페이스 내의 사용자에게 특정 워크스페이스 역할을 할당합니다.
      parameters:
      - description: 워크스페이스 ID
        in: path
        name: workspaceId
        required: true
        type: integer
      - description: 사용자 DB ID (db_id)
        in: path
        name: userId
        required: true
        type: integer
      - description: 워크스페이스 역할 ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 'error: 잘못된 ID 형식'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: 사용자, 역할 또는 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 'error: 역할이 해당 워크스페이스에 속하지 않음'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 워크스페이스 사용자에게 역할 할당
      tags:
      - workspaces
      - roles
      - users
  /workspaces/name/{name}:
    get:
      consumes:
      - application/json
      description: 이름으로 특정 워크스페이스를 조회합니다 (연결된 프로젝트 정보 포함).
      parameters:
      - description: 워크스페이스 이름
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "404":
          description: 'error: 워크스페이스를 찾을 수 없습니다'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: 서버 내부 오류'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: 이름으로 워크스페이스 조회
      tags:
      - workspaces
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
